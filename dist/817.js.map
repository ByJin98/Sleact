{"version":3,"file":"817.js","mappings":"wsCAuEA,UA/Dc,WACZ,OAA0CA,EAAAA,EAAAA,IAAO,aAAcC,EAAAA,GAAjDC,EAAQ,EAAdC,KAAgBC,EAAK,EAALA,MAAOC,EAAM,EAANA,OACoB,KAAfC,EAAAA,EAAAA,WAAS,GAAM,GAA5CC,EAAU,KAAEC,EAAa,KACW,KAAZC,EAAAA,EAAAA,GAAS,IAAG,GAApCC,EAAK,KAAEC,EAAa,KACsB,KAAZF,EAAAA,EAAAA,GAAS,IAAG,GAA1CG,EAAQ,KAAEC,EAAgB,KAC3BC,GAAWC,EAAAA,EAAAA,cACf,SAACC,GACCA,EAAEC,iBACFT,GAAc,GACdU,EAAAA,EAAAA,KAEI,mBACA,CAAER,MAAAA,EAAOE,SAAAA,GACT,CACEO,iBAAiB,IAGpBC,MAAK,SAACC,GACLhB,EAAOgB,EAASlB,MAAM,EACxB,IACCmB,OAAM,SAAClB,GAAU,QAChBI,EAA6C,OAAjB,QAAd,EAAAJ,EAAMiB,gBAAQ,OAAM,QAAN,EAAd,EAAgBlB,YAAI,WAAN,EAAd,EAAsBoB,MACtC,GACJ,GACA,CAACb,EAAOE,IAGV,YAAiBY,IAAbtB,EACK,2BAAK,WAEduB,QAAQC,IAAItB,EAAOF,IACdE,GAASF,GACZuB,QAAQC,IAAI,OAAQxB,GACb,gBAAC,KAAQ,CAACyB,GAAG,kCAIpB,uBAAKC,GAAG,aACN,gBAAC,KAAM,KAAC,UACR,gBAAC,KAAI,CAACd,SAAUA,GACd,gBAAC,KAAK,CAACc,GAAG,eACR,4BAAM,UACN,2BACE,gBAAC,KAAK,CAACC,KAAK,QAAQD,GAAG,QAAQE,KAAK,QAAQC,MAAOrB,EAAOsB,SAAUrB,MAGxE,gBAAC,KAAK,CAACiB,GAAG,kBACR,4BAAM,QACN,2BACE,gBAAC,KAAK,CAACC,KAAK,WAAWD,GAAG,WAAWE,KAAK,WAAWC,MAAOnB,EAAUoB,SAAUnB,KAEjFN,GAAc,gBAAC,KAAK,KAAC,6BAExB,gBAAC,KAAM,CAACsB,KAAK,UAAS,QAExB,gBAAC,KAAa,KAAC,iBAEb,qBAAGI,KAAK,WAAU,eAI1B,C","sources":["webpack://sleact/./pages/Login/index.tsx"],"sourcesContent":["import useInput from '@hooks/useInput';\r\nimport { Button, Error, Form, Header, Input, Label, LinkContainer } from '@pages/SignUp/styles';\r\nimport fetcher from '@utils/fetcher';\r\nimport axios from 'axios';\r\nimport React, { FormEvent, useCallback, useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport useSWR from 'swr';\r\n\r\nconst LogIn = () => {\r\n  const { data: userData, error, mutate } = useSWR('/api/users', fetcher);\r\n  const [logInError, setLogInError] = useState(false);\r\n  const [email, onChangeEmail] = useInput('');\r\n  const [password, onChangePassword] = useInput('');\r\n  const onSubmit = useCallback(\r\n    (e: FormEvent<HTMLFormElement>) => {\r\n      e.preventDefault();\r\n      setLogInError(false);\r\n      axios\r\n        .post(\r\n          '/api/users/login',\r\n          { email, password },\r\n          {\r\n            withCredentials: true,\r\n          },\r\n        )\r\n        .then((response) => {\r\n          mutate(response.data, false);\r\n        })\r\n        .catch((error) => {\r\n          setLogInError(error.response?.data?.code === 401);\r\n        });\r\n    },\r\n    [email, password],\r\n  );\r\n\r\n  if (userData === undefined) {\r\n    return <div>로딩중...</div>;\r\n  }\r\n  console.log(error, userData);\r\n  if (!error && userData) {\r\n    console.log('로그인됨', userData);\r\n    return <Redirect to=\"/workspace/sleact/channel/일반\" />;\r\n  }\r\n\r\n  return (\r\n    <div id=\"container\">\r\n      <Header>Sleact</Header>\r\n      <Form onSubmit={onSubmit}>\r\n        <Label id=\"email-label\">\r\n          <span>이메일 주소</span>\r\n          <div>\r\n            <Input type=\"email\" id=\"email\" name=\"email\" value={email} onChange={onChangeEmail} />\r\n          </div>\r\n        </Label>\r\n        <Label id=\"password-label\">\r\n          <span>비밀번호</span>\r\n          <div>\r\n            <Input type=\"password\" id=\"password\" name=\"password\" value={password} onChange={onChangePassword} />\r\n          </div>\r\n          {logInError && <Error>이메일과 비밀번호 조합이 일치하지 않습니다.</Error>}\r\n        </Label>\r\n        <Button type=\"submit\">로그인</Button>\r\n      </Form>\r\n      <LinkContainer>\r\n        아직 회원이 아니신가요?&nbsp;\r\n        <a href=\"/signup\">회원가입 하러가기</a>\r\n      </LinkContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LogIn;\r\n"],"names":["useSWR","fetcher","userData","data","error","mutate","useState","logInError","setLogInError","useInput","email","onChangeEmail","password","onChangePassword","onSubmit","useCallback","e","preventDefault","axios","withCredentials","then","response","catch","code","undefined","console","log","to","id","type","name","value","onChange","href"],"sourceRoot":""}