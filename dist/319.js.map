{"version":3,"file":"319.js","mappings":"ktCAuHA,UA/Ge,WACb,OAA0CA,EAAAA,EAAAA,IAAO,aAAcC,EAAAA,GAAjDC,EAAQ,EAAdC,KAEmC,GAFd,EAALC,MAAa,EAANC,OAEY,GAAZC,EAAAA,EAAAA,GAAS,IAAG,IAApCC,EAAK,KAAEC,EAAa,KACsB,KAAZF,EAAAA,EAAAA,GAAS,IAAG,GAA1CG,EAAQ,KAAEC,EAAgB,KACW,KAAZC,EAAAA,EAAAA,UAAS,IAAG,GAArCC,EAAQ,KAAEC,EAAW,KAC0B,KAAZF,EAAAA,EAAAA,UAAS,IAAG,GAA/CG,EAAa,KAAEC,EAAgB,KACmB,KAAfJ,EAAAA,EAAAA,WAAS,GAAM,GAAlDK,EAAa,KAAEC,EAAgB,KACY,KAAZN,EAAAA,EAAAA,UAAS,IAAG,GAA3CO,EAAW,KAAEC,EAAc,KACuB,KAAfR,EAAAA,EAAAA,WAAS,GAAM,GAAlDS,EAAa,KAAEC,EAAgB,KAEhCC,GAAmBC,EAAAA,EAAAA,cACvB,SAACC,GACCX,EAAYW,EAAEC,OAAOC,OACrBT,EAAiBO,EAAEC,OAAOC,QAAUZ,EACtC,GACA,CAACA,IAGGa,GAAwBJ,EAAAA,EAAAA,cAC5B,SAACC,GACCT,EAAiBS,EAAEC,OAAOC,OAC1BT,EAAiBO,EAAEC,OAAOC,QAAUd,EACtC,GACA,CAACA,IAGGgB,GAAWL,EAAAA,EAAAA,cACf,SAACC,GACCA,EAAEK,iBACFC,QAAQC,IAAIxB,EAAOE,EAAUG,EAAUE,GACvCK,EAAe,IACfE,GAAiB,IACZL,GAAiBP,GAAYF,IAChCuB,QAAQC,IAAI,UACZC,EAAAA,EAAAA,KACQ,aAAc,CAClBzB,MAAAA,EACAE,SAAAA,EACAG,SAAAA,IAEDqB,MAAK,SAACC,GACLJ,QAAQC,IAAIG,GACZb,GAAiB,EACnB,IACCc,OAAM,SAAC/B,GACN0B,QAAQC,IAAI3B,EAAM8B,UAClBf,EAAef,EAAM8B,SAAS/B,KAChC,IACCiC,SAAQ,WAAO,IAEtB,GACA,CAAC7B,EAAOE,EAAUG,EAAUE,IAG9B,YAAiBuB,IAAbnC,EACK,2BAAK,UAGVA,EACK,gBAAC,KAAQ,CAACoC,GAAG,iCAIpB,uBAAKC,GAAG,aACN,gBAAC,KAAM,KAAC,UACR,gBAAC,KAAI,CAACX,SAAUA,GACd,gBAAC,KAAK,CAACW,GAAG,eACR,4BAAM,UACN,2BACE,gBAAC,KAAK,CAACC,KAAK,QAAQD,GAAG,QAAQE,KAAK,QAAQf,MAAOnB,EAAOmC,SAAUlC,MAGxE,gBAAC,KAAK,CAAC+B,GAAG,kBACR,4BAAM,OACN,2BACE,gBAAC,KAAK,CAACC,KAAK,OAAOD,GAAG,WAAWE,KAAK,WAAWf,MAAOjB,EAAUiC,SAAUhC,MAGhF,gBAAC,KAAK,CAAC6B,GAAG,kBACR,4BAAM,QACN,2BACE,gBAAC,KAAK,CAACC,KAAK,WAAWD,GAAG,WAAWE,KAAK,WAAWf,MAAOd,EAAU8B,SAAUpB,MAGpF,gBAAC,KAAK,CAACiB,GAAG,wBACR,4BAAM,WACN,2BACE,gBAAC,KAAK,CACJC,KAAK,WACLD,GAAG,iBACHE,KAAK,iBACLf,MAAOZ,EACP4B,SAAUf,KAGbX,GAAiB,gBAAC,KAAK,KAAC,qBACvBP,GAAY,gBAAC,KAAK,KAAC,gBACpBS,GAAe,gBAAC,KAAK,KAAC,kBACtBE,GAAiB,gBAAC,KAAO,KAAC,wBAE7B,gBAAC,KAAM,CAACoB,KAAK,UAAS,SAExB,gBAAC,KAAa,KAAC,cAEb,gBAAC,KAAI,CAACF,GAAG,UAAS,aAI1B,C","sources":["webpack://sleact/./pages/SignUp/index.tsx"],"sourcesContent":["import useInput from '@hooks/useInput';\r\nimport axios from 'axios';\r\nimport React, { useState, useCallback, ChangeEvent, FormEvent } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { Header, Form, Label, Input, Button, LinkContainer, Error, Success } from './styles';\r\nimport useSWR from 'swr';\r\nimport fetcher from '@utils/fetcher';\r\n\r\nconst SignUp = () => {\r\n  const { data: userData, error, mutate } = useSWR('/api/users', fetcher);\r\n\r\n  const [email, onChangeEmail] = useInput('');\r\n  const [nickname, onChangeNickname] = useInput('');\r\n  const [password, setPassword] = useState('');\r\n  const [passwordCheck, setPasswordCheck] = useState('');\r\n  const [mismatchError, setMismatchError] = useState(false);\r\n  const [signUpError, setSignUpError] = useState('');\r\n  const [signUpSuccess, setSignUpSuccess] = useState(false);\r\n\r\n  const onChangePassword = useCallback(\r\n    (e: ChangeEvent<HTMLInputElement>) => {\r\n      setPassword(e.target.value);\r\n      setMismatchError(e.target.value !== passwordCheck);\r\n    },\r\n    [passwordCheck],\r\n  );\r\n\r\n  const onChangePasswordCheck = useCallback(\r\n    (e: ChangeEvent<HTMLInputElement>) => {\r\n      setPasswordCheck(e.target.value);\r\n      setMismatchError(e.target.value !== password);\r\n    },\r\n    [password],\r\n  );\r\n\r\n  const onSubmit = useCallback(\r\n    (e: FormEvent<HTMLFormElement>) => {\r\n      e.preventDefault();\r\n      console.log(email, nickname, password, passwordCheck);\r\n      setSignUpError('');\r\n      setSignUpSuccess(false);\r\n      if (!mismatchError && nickname && email) {\r\n        console.log('서버회원가입');\r\n        axios\r\n          .post('/api/users', {\r\n            email,\r\n            nickname,\r\n            password,\r\n          })\r\n          .then((response) => {\r\n            console.log(response);\r\n            setSignUpSuccess(true);\r\n          })\r\n          .catch((error) => {\r\n            console.log(error.response);\r\n            setSignUpError(error.response.data);\r\n          })\r\n          .finally(() => {});\r\n      }\r\n    },\r\n    [email, nickname, password, passwordCheck],\r\n  );\r\n\r\n  if (userData === undefined) {\r\n    return <div>로딩중...</div>;\r\n  }\r\n\r\n  if (userData) {\r\n    return <Redirect to=\"/workspace/sleact/channel/일반\" />;\r\n  }\r\n\r\n  return (\r\n    <div id=\"container\">\r\n      <Header>Sleact</Header>\r\n      <Form onSubmit={onSubmit}>\r\n        <Label id=\"email-label\">\r\n          <span>이메일 주소</span>\r\n          <div>\r\n            <Input type=\"email\" id=\"email\" name=\"email\" value={email} onChange={onChangeEmail} />\r\n          </div>\r\n        </Label>\r\n        <Label id=\"nickname-label\">\r\n          <span>닉네임</span>\r\n          <div>\r\n            <Input type=\"text\" id=\"nickname\" name=\"nickname\" value={nickname} onChange={onChangeNickname} />\r\n          </div>\r\n        </Label>\r\n        <Label id=\"password-label\">\r\n          <span>비밀번호</span>\r\n          <div>\r\n            <Input type=\"password\" id=\"password\" name=\"password\" value={password} onChange={onChangePassword} />\r\n          </div>\r\n        </Label>\r\n        <Label id=\"password-check-label\">\r\n          <span>비밀번호 확인</span>\r\n          <div>\r\n            <Input\r\n              type=\"password\"\r\n              id=\"password-check\"\r\n              name=\"password-check\"\r\n              value={passwordCheck}\r\n              onChange={onChangePasswordCheck}\r\n            />\r\n          </div>\r\n          {mismatchError && <Error>비밀번호가 일치하지 않습니다.</Error>}\r\n          {!nickname && <Error>닉네임을 입력해주세요.</Error>}\r\n          {signUpError && <Error>이미 가입된 이메일입니다.</Error>}\r\n          {signUpSuccess && <Success>회원가입되었습니다! 로그인해주세요.</Success>}\r\n        </Label>\r\n        <Button type=\"submit\">회원가입</Button>\r\n      </Form>\r\n      <LinkContainer>\r\n        이미 회원이신가요?&nbsp;\r\n        <Link to=\"/login\">로그인 하러가기</Link>\r\n      </LinkContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n"],"names":["useSWR","fetcher","userData","data","error","mutate","useInput","email","onChangeEmail","nickname","onChangeNickname","useState","password","setPassword","passwordCheck","setPasswordCheck","mismatchError","setMismatchError","signUpError","setSignUpError","signUpSuccess","setSignUpSuccess","onChangePassword","useCallback","e","target","value","onChangePasswordCheck","onSubmit","preventDefault","console","log","axios","then","response","catch","finally","undefined","to","id","type","name","onChange"],"sourceRoot":""}