{"version":3,"file":"838.js","mappings":"iKAEaA,GAAW,+fA0BXC,GAAgB,uK,UCF7B,EAlB4C,SAAH,GAAyC,IAAnCC,EAAI,EAAJA,KAAMC,EAAQ,EAARA,SAAUC,EAAY,EAAZA,aACvDC,GAAkBC,EAAAA,EAAAA,cAAY,SAACC,GACnCA,EAAEF,iBACJ,GAAG,IAEH,OAAKH,EAIH,gBAACF,EAAW,CAACQ,QAASJ,GACpB,uBAAKI,QAASH,GACZ,gBAACJ,EAAgB,CAACO,QAASJ,GAAc,KACxCD,IANE,IAUX,E,gLCPA,IAiDA,EAjDsC,SAAH,GAA0D,I,IAApDD,EAAI,EAAJA,KAAME,EAAY,EAAZA,aAAcK,EAAyB,EAAzBA,0BAC3D,GAA+BC,EAAAA,EAAAA,MAAvBC,EAAS,EAATA,UAC4D,GAD1C,EAAPC,Q,GACqCC,EAAAA,EAAAA,GAAS,I,EAAG,E,k5BAA7DC,EAAU,KAAEC,EAAkB,KAAEC,EAAa,KAEpD,GAAmDC,EAAAA,EAAAA,IAAsB,aAAcC,EAAAA,GAAzEC,EAAQ,EAAdC,KACR,GAD8C,EAAtBC,QACiCJ,EAAAA,EAAAA,IACvDE,EAAW,mBAAH,OAAsBR,EAAS,aAAc,KACrDO,EAAAA,IAFiCI,GAAV,EAAjBF,KAA4C,EAAzBC,QAKrBE,GAAkBjB,EAAAA,EAAAA,cACtB,SAACC,GACCA,EAAEiB,iBACFC,EAAAA,EAAAA,KACQ,mBAAD,OACgBd,EAAS,aAC5B,CACEe,KAAMZ,GAER,CACEa,iBAAiB,IAGpBC,MAAK,WACJnB,GAA0B,GAC1Ba,IACAN,EAAc,GAChB,IACCa,OAAM,SAACC,GAAU,MAChBC,QAAQC,IAAIF,GACZG,EAAAA,GAAAA,MAA0B,QAAf,EAACH,EAAMI,gBAAQ,aAAd,EAAgBd,KAAM,CAAEe,SAAU,iBAChD,GACJ,GACA,CAACrB,IAGH,OACE,gBAAC,EAAK,CAACZ,KAAMA,EAAME,aAAcA,GAC/B,wBAAMgC,SAAUb,GACd,gBAAC,KAAK,CAACc,GAAG,iBACR,4BAAM,MACN,gBAAC,KAAK,CAACA,GAAG,UAAUC,MAAOxB,EAAYyB,SAAUxB,KAEnD,gBAAC,KAAM,CAACyB,KAAK,UAAS,SAI9B,EC9DaC,GAAc,8MAYvB,YAAW,SAARC,UACK,gDAKT,Q,UC4BH,EArC2B,SAAH,GAA6B,IAAvBC,EAAM,EAANA,OAAQC,EAAQ,EAARA,SAC5BjC,GAAcD,EAAAA,EAAAA,MAAdC,UACFkC,GAAWC,EAAAA,EAAAA,MACH3B,GAAaF,EAAAA,EAAAA,IAAc,aAAcC,EAAAA,EAAS,CAC9D6B,iBAAkB,MADZ3B,KAGF4B,EAAOC,aAAaC,QAAQ,GAAD,OAAIvC,EAAS,YAAIgC,EAAON,MAAS,EAClE,GAAgCpB,EAAAA,EAAAA,IAC9BE,EAAW,mBAAH,OAAsBR,EAAS,gBAAQgC,EAAON,GAAE,0BAAkBW,GAAS,KACnF9B,EAAAA,GAFYiC,EAAK,EAAX/B,KAAaC,EAAM,EAANA,OAWrB,OANA+B,EAAAA,EAAAA,YAAU,WACJP,EAASQ,WAAa,cAAL,OAAmB1C,EAAS,eAAOgC,EAAON,KAC7DhB,EAAO,EAEX,GAAG,CAACA,EAAQwB,EAASQ,SAAU1C,EAAWgC,IAGxC,gBAAC,KAAO,CAACW,IAAKX,EAAON,GAAIkB,gBAAgB,WAAWC,GAAE,qBAAgB7C,EAAS,eAAOgC,EAAON,KAC3F,qBACEoB,UAAS,2GACPb,EAAW,6CAA+C,4BAE5D,cAAY,OACZ,UAAQ,qBACR,wBAAsB,QACtB,0BAAwB,QACxB,uBAAqB,UAEvB,wBAAMa,UAAWN,GAASA,EAAQ,EAAI,YAASO,GAAYf,EAAOgB,UACjEhB,EAAON,MAAOlB,aAAQ,EAARA,EAAUkB,KAAM,4BAAM,QACnCc,GAASA,EAAQ,GAAK,wBAAMM,UAAU,SAASN,IAAkB,KAGzE,E,UCvCMS,EAAqC,CAAC,EAuB5C,EAtBkB,SAACjD,GACjBoB,QAAQ8B,IAAI,SAAUlD,GACtB,IAAMmD,GAAaxD,EAAAA,EAAAA,cAAY,WACzBK,IACFiD,EAAQjD,GAAWmD,oBACZF,EAAQjD,GAEnB,GAAG,CAACA,IAEJ,OAAKA,GAEAiD,EAAQjD,KACXiD,EAAQjD,IAAaoD,EAAAA,EAAAA,IAAG,GAAD,OAfX,wBAesB,eAAOpD,GAAa,CACpDqD,WAAY,CAAC,eAGfjC,QAAQkC,KAAK,gBAAiBtD,EAAWiD,EAAQjD,KAG5C,CAACiD,EAAQjD,GAAYmD,IAVL,MAACJ,EAAWI,EAWrC,E,khCCjBA,IAwDA,EAxDe,WACb,IAAQnD,GAAcD,EAAAA,EAAAA,MAAdC,UACMQ,GAAaF,EAAAA,EAAAA,IAAc,aAAcC,EAAAA,EAAS,CAC9D6B,iBAAkB,MADZ3B,KAGM8C,GAAejD,EAAAA,EAAAA,IAC3BE,EAAW,mBAAH,OAAsBR,EAAS,YAAa,KACpDO,EAAAA,GAFME,KAID+C,EAA8B,EAApBC,EAAUzD,GAAU,GAAxB,GACgD,KAAf0D,EAAAA,EAAAA,WAAS,GAAM,GAAtDC,EAAe,KAAEC,EAAkB,KACgB,KAAtBF,EAAAA,EAAAA,UAAmB,IAAG,GAAnDG,EAAU,KAAEC,EAAa,KAE1BC,GAAwBpE,EAAAA,EAAAA,cAAY,WACxCiE,GAAmB,SAACI,GAAI,OAAMA,CAAI,GACpC,GAAG,IAkBH,OAhBAvB,EAAAA,EAAAA,YAAU,WACRrB,QAAQ8B,IAAI,wBAAyBlD,GACrC8D,EAAc,GAChB,GAAG,CAAC9D,KAEJyC,EAAAA,EAAAA,YAAU,WAKR,OAJAe,SAAAA,EAAQS,GAAG,cAAc,SAACxD,GACxBqD,EAAcrD,EAChB,IACAW,QAAQ8B,IAAI,eAAgBM,aAAM,EAANA,EAAQU,aAAa,MAAOV,GACjD,WACLpC,QAAQ8B,IAAI,gBAAiBM,aAAM,EAANA,EAAQU,aAAa,OAClDV,SAAAA,EAAQW,IAAI,aACd,CACF,GAAG,CAACX,IAGF,gCACE,0BACE,gBAAC1B,EAAc,CAACC,SAAU4B,EAAiB9D,QAASkE,GAClD,qBACEjB,UAAU,mKACV,UAAQ,2BACR,cAAY,UAGhB,4BAAM,oBAER,4BACIa,IACAJ,aAAU,EAAVA,EAAYa,KAAI,SAACpC,GACf,IAAMC,EAAW4B,EAAWQ,SAASrC,EAAON,IAC5C,OAAO,gBAAC,EAAM,CAACiB,IAAKX,EAAON,GAAIM,OAAQA,EAAQC,SAAUA,GAC3D,MAIV,EC7BA,EA1BgC,SAAH,GAAoB,IAAdhC,EAAO,EAAPA,QACzBD,GAAcD,EAAAA,EAAAA,MAAdC,UACFkC,GAAWC,EAAAA,EAAAA,MACH3B,GAAaF,EAAAA,EAAAA,IAAc,aAAcC,EAAAA,EAAS,CAC9D6B,iBAAkB,MADZ3B,KAGF4B,EAAOC,aAAaC,QAAQ,GAAD,OAAIvC,EAAS,YAAIC,EAAQc,QAAW,EACrE,GAAgCT,EAAAA,EAAAA,IAC9BE,EAAW,mBAAH,OAAsBR,EAAS,qBAAaC,EAAQc,KAAI,0BAAkBsB,GAAS,KAC3F9B,EAAAA,GAFYiC,EAAK,EAAX/B,KAAaC,EAAM,EAANA,OAWrB,OANA+B,EAAAA,EAAAA,YAAU,WACJP,EAASQ,WAAa,cAAL,OAAmB1C,EAAS,oBAAYC,EAAQc,OACnEL,EAAO,EAEX,GAAG,CAACA,EAAQwB,EAASQ,SAAU1C,EAAWC,IAGxC,gBAAC,KAAO,CAAC0C,IAAK1C,EAAQc,KAAM6B,gBAAgB,WAAWC,GAAE,qBAAgB7C,EAAS,oBAAYC,EAAQc,OACpG,wBAAM+B,eAAqBC,IAAVP,GAAuBA,EAAQ,EAAI,YAASO,GAAW,KAAG9C,EAAQc,WACxEgC,IAAVP,GAAuBA,EAAQ,GAAK,wBAAMM,UAAU,SAASN,GAGpE,E,0GCrBA,IAkCA,EAlC+B,WAC7B,I,IAAQxC,GAAcD,EAAAA,EAAAA,MAAdC,UACqD,G,GAAf0D,EAAAA,EAAAA,WAAS,G,EAAM,E,k5BAAtDC,EAAe,KAAEC,EAAkB,KAC5BpD,GAAaF,EAAAA,EAAAA,IAAc,aAAcC,EAAAA,EAAS,CAC9D6B,iBAAkB,MADZ3B,KAGM6D,GAAgBhE,EAAAA,EAAAA,IAAmBE,EAAW,mBAAH,OAAsBR,EAAS,aAAc,KAAMO,EAAAA,GAApGE,KAEFsD,GAAwBpE,EAAAA,EAAAA,cAAY,WACxCiE,GAAmB,SAACI,GAAI,OAAMA,CAAI,GACpC,GAAG,IAEH,OACE,gCACE,0BACE,gBAAClC,EAAc,CAACC,SAAU4B,EAAiB9D,QAASkE,GAClD,qBACEjB,UAAU,mKACV,UAAQ,2BACR,cAAY,UAGhB,4BAAM,aAER,4BACIa,IACAW,aAAW,EAAXA,EAAaF,KAAI,SAACnE,GAChB,OAAO,gBAAC,EAAW,CAAC0C,IAAK1C,EAAQyB,GAAIzB,QAASA,GAChD,MAIV,E,0GC7BA,IA6CA,EA7CsC,SAAH,GAA0D,I,IAApDV,EAAI,EAAJA,KAAME,EAAY,EAAZA,aAAc8E,EAAyB,EAAzBA,0BAC3D,GAA+BxE,EAAAA,EAAAA,MAAvBC,EAAS,EAATA,UAAWC,EAAO,EAAPA,QAC8C,G,GAAZC,EAAAA,EAAAA,GAAS,I,EAAG,E,k5BAA1DsE,EAAS,KAAEC,EAAiB,KAAEC,EAAY,KACnClE,GAAaF,EAAAA,EAAAA,IAAc,aAAcC,EAAAA,GAA/CE,KACQkE,GAAsBrE,EAAAA,EAAAA,IACpCE,EAAW,mBAAH,OAAsBR,EAAS,oBAAYC,EAAO,YAAa,KACvEM,EAAAA,GAFMG,OAKFkE,GAAiBjF,EAAAA,EAAAA,cACrB,SAACC,GACCA,EAAEiB,iBACG2D,GAAcA,EAAUK,QAG7B/D,EAAAA,EAAAA,KACQ,mBAAD,OAAoBd,EAAS,qBAAaC,EAAO,YAAY,CAChE6E,MAAON,IAERvD,MAAK,WACJ0D,IACAJ,GAA0B,GAC1BG,EAAa,GACf,IACCxD,OAAM,SAACC,GAAU,MAChBC,QAAQC,IAAIF,GACZG,EAAAA,GAAAA,MAA0B,QAAf,EAACH,EAAMI,gBAAQ,aAAd,EAAgBd,KAAM,CAAEe,SAAU,iBAChD,GACJ,GACA,CAACvB,EAASuE,EAAWG,EAAmBD,EAAcH,EAA2BvE,IAGnF,OACE,gBAAC,EAAK,CAACT,KAAMA,EAAME,aAAcA,GAC/B,wBAAMgC,SAAUmD,GACd,gBAAC,KAAK,CAAClD,GAAG,gBACR,4BAAM,YACN,gBAAC,KAAK,CAACA,GAAG,SAASC,MAAO6C,EAAW5C,SAAU6C,KAEjD,gBAAC,KAAM,CAAC5C,KAAK,UAAS,SAI9B,E,0GC3CA,IA6CA,EA7CwC,SAAH,GAA4D,I,IAAtDtC,EAAI,EAAJA,KAAME,EAAY,EAAZA,aAAcsF,EAA2B,EAA3BA,4BACrD/E,GAAcD,EAAAA,EAAAA,MAAdC,UACyD,G,GAAZE,EAAAA,EAAAA,GAAS,I,EAAG,E,k5BAA1DsE,EAAS,KAAEC,EAAiB,KAAEC,EAAY,KACnClE,GAAaF,EAAAA,EAAAA,IAAc,aAAcC,EAAAA,GAA/CE,KACQuE,GAAqB1E,EAAAA,EAAAA,IACnCE,EAAW,mBAAH,OAAsBR,EAAS,YAAa,KACpDO,EAAAA,GAFMG,OAKFkE,GAAiBjF,EAAAA,EAAAA,cACrB,SAACC,GACCA,EAAEiB,iBACG2D,GAAcA,EAAUK,QAG7B/D,EAAAA,EAAAA,KACQ,mBAAD,OAAoBd,EAAS,YAAY,CAC5C8E,MAAON,IAERvD,MAAK,WACJ+D,IACAD,GAA4B,GAC5BL,EAAa,GACf,IACCxD,OAAM,SAACC,GAAU,MAChBC,QAAQC,IAAIF,GACZG,EAAAA,GAAAA,MAA0B,QAAf,EAACH,EAAMI,gBAAQ,aAAd,EAAgBd,KAAM,CAAEe,SAAU,iBAChD,GACJ,GACA,CAACgD,EAAWxE,EAAWgF,EAAkBD,EAA6BL,IAGxE,OACE,gBAAC,EAAK,CAACnF,KAAMA,EAAME,aAAcA,GAC/B,wBAAMgC,SAAUmD,GACd,gBAAC,KAAK,CAAClD,GAAG,gBACR,4BAAM,OACN,gBAAC,KAAK,CAACA,GAAG,SAASG,KAAK,QAAQF,MAAO6C,EAAW5C,SAAU6C,KAE9D,gBAAC,KAAM,CAAC5C,KAAK,UAAS,SAI9B,ECzDaoD,GAAU,6dAuBV3F,GAAgB,uKCfvB4F,EAAqC,SAAH,GAA6D,IAAvDC,EAAW,EAAXA,YAAaC,EAAK,EAALA,MAAO7F,EAAI,EAAJA,KAAMC,EAAQ,EAARA,SAAUC,EAAY,EAAZA,aAC1EC,GAAkBC,EAAAA,EAAAA,cAAY,SAACC,GACnCA,EAAEF,iBACJ,GAAG,IAEH,OAAKH,EAIH,gBAAC0F,EAAU,CAACpF,QAASJ,GACnB,uBAAKI,QAASH,EAAiB0F,MAAOA,GACnCD,GAAe,gBAAC,EAAgB,CAACtF,QAASJ,GAAc,KACxDD,IANE,IAUX,EACA0F,EAAKG,aAAe,CAClBF,aAAa,GAGf,Q,UC5BaG,GAAQ,+GAORC,GAAI,gKAQJC,GAAmB,OAAOC,EAAAA,EAAa,oBAApB,CAAqB,yaA8BxCC,GAAO,8PAWPC,GAAU,mGAMVC,GAAW,sLAapB,YAAQ,SAALC,OACE,mDAIN,Q,6BCWH,EAhF2B,SAAH,GAAgE,IAA1DC,EAAY,EAAZA,aAAcC,EAAI,EAAJA,KAAMC,EAAY,EAAZA,aAAcC,EAAW,EAAXA,YAAaxF,EAAI,EAAJA,KACrEyF,GAAcC,EAAAA,EAAAA,QAA4B,OAChD1D,EAAAA,EAAAA,YAAU,WACJyD,EAAYE,UACdC,EAAAA,EAAAA,GAASH,EAAYE,QAEzB,GAAG,IAEH,IAAME,GAAgB3G,EAAAA,EAAAA,cACpB,SAACC,GACe,UAAVA,EAAE+C,MACC/C,EAAE2G,WACL3G,EAAEiB,iBACFiF,EAAalG,IAGnB,GACA,CAACkG,IAGGU,GAMiB7G,EAAAA,EAAAA,cACrB,SAACqC,EAAQyE,EAAQC,EAAoBC,EAAOd,GAC1C,OAAKpF,EAIH,gBAACmF,EAAW,CAACC,MAAOA,GAClB,uBAAKe,IAAKC,IAAAA,IAAapG,EAAKkG,GAAO7B,MAAO,CAAEgC,EAAG,OAAQC,EAAG,UAAYC,IAAKvG,EAAKkG,GAAO3D,WACvF,4BAAO0D,IALF,IAQX,GACA,CAACjG,IAGH,OACE,gBAAC6E,EAAQ,KACP,gBAACC,EAAI,CAAC9D,SAAUqE,GACd,gBAACN,EAAgB,CACf9D,GAAG,cACHC,MAAOoE,EACPnE,SAAUoE,EACViB,WAAYX,EACZL,YAAaA,EACbiB,SAAUhB,EACViB,6BAA2B,GAE3B,gBAAC,IAAO,CACNC,kBAAgB,EAChBC,QAAQ,IACR5G,MAAMA,aAAI,EAAJA,EAAM2D,KAAI,SAACkD,GAAC,MAAM,CAAE5F,GAAI4F,EAAE5F,GAAI6F,QAASD,EAAEtE,SAAU,MAAM,GAC/DwE,iBAAkBhB,KAGtB,gBAACd,EAAO,KACN,gBAACC,EAAU,CACT7C,UACE,qIACCiD,SAAAA,EAAMlB,OAAS,GAAK,oCAEvB,UAAQ,oBACR,aAAW,eACX,UAAQ,iBACRhD,KAAK,SACL4F,WAAW1B,SAAAA,EAAMlB,SAEjB,qBAAG/B,UAAU,mCAAmC,cAAY,YAMxE,EC1Fa4E,GAAW,2a,6BCUlBC,EAAkB,SAAH,GAAiB,IAAXlH,EAAI,EAAJA,KAEjBT,GADOD,EAAAA,EAAAA,MACPC,UACF4H,EAAc,WAAYnH,EAAOA,EAAKoH,OAASpH,EAAKqH,KAEpDC,GAASC,EAAAA,EAAAA,UACb,kBACEC,EAAAA,EAAAA,GAAe,CACbC,MAAOzH,EAAK0H,QACZC,QAAS,0BACTC,UAAS,SAACC,EAAO3B,GACf,IAAM4B,EAAuBD,EAAMA,MAAM,0BACzC,OAAIC,EAEA,gBAAC,KAAI,CAAC5F,IAAK2F,EAAQ3B,EAAO9D,GAAE,qBAAgB7C,EAAS,eAAOuI,EAAI,KAAM,IAClEA,EAAI,IAIL,sBAAI5F,IAAKgE,GAClB,GACA,GACJ,CAAClG,EAAK0H,UAGR,OACE,gBAACT,EAAW,KACV,uBAAK5E,UAAU,YACb,uBAAK8D,IAAKC,IAAAA,IAAae,EAAK9C,MAAO,CAAEgC,EAAG,OAAQC,EAAG,UAAYC,IAAKY,EAAK5E,YAE3E,uBAAKF,UAAU,aACb,uBAAKA,UAAU,aACb,yBAAI8E,EAAK5E,UACT,4BAAOwF,IAAM/H,EAAKgI,WAAWC,aAE/B,yBAAIX,IAIZ,EAEA,GAAeY,EAAAA,EAAAA,MAAKhB,GCnDPiB,IAAQ,4FAMRC,IAAO,2GAKPC,IAAY,ic,sHCAzB,IAgCA,GAhC4B,SAAH,GAAwE,IAAlEC,EAAY,EAAZA,aAAcC,EAAa,EAAbA,cAAeC,EAAO,EAAPA,QAASC,EAAY,EAAZA,aAAcC,EAAO,EAAPA,QAC3EC,GAAWzJ,EAAAA,EAAAA,cACf,SAAC0J,GAC0B,IAArBA,EAAOC,WAAoBN,GAAkBC,GAC/CE,GAAQ,SAACI,GAAI,OAAKA,EAAO,CAAC,IAAEtI,MAAK,WAAM,QACjB,QAApB,EAAA8H,EAAa3C,eAAO,OAApB,EAAsBkD,WAA8B,QAApB,EAAAP,EAAa3C,eAAO,aAApB,EAAsBoD,mBAAoBH,EAAOI,aACnF,GAEJ,GACA,CAACN,EAASJ,EAAcC,EAAeC,IAGzC,OACE,gBAACL,GAAQ,KACP,gBAAC,MAAU,CAACc,UAAQ,EAACC,IAAKZ,EAAca,cAAeR,GACpDS,OAAOC,QAAQZ,GAAc9E,KAAI,YAAmB,I,IAAA,G,EAAA,E,4CAAA,I,s2BAAjB/B,EAAI,KAAE0H,EAAK,KAC7C,OACE,gBAAClB,GAAO,CAAC/F,UAAS,kBAAaT,GAAQM,IAAKN,GAC1C,gBAACyG,GAAY,KACX,8BAASzG,IAEV0H,EAAM3F,KAAI,SAAC2B,GAAI,OACd,gBAAC,EAAI,CAACpD,IAAKoD,EAAKrE,GAAIjB,KAAMsF,GAAQ,IAI1C,KAIR,ECzCaiE,IAAS,sJAQTC,IAAM,6PAWNC,IAAQ,qOClBN,SAASC,GAAmCC,GACzD,IAAMC,EAAmC,CAAC,EAS1C,OARAD,EAASE,SAAQ,SAACvE,GAChB,IAAMwE,EAAY/B,IAAMzC,EAAK0C,WAAW+B,OAAO,cAC3CC,MAAMC,QAAQL,EAASE,IACzBF,EAASE,GAAWI,KAAK5E,GAEzBsE,EAASE,GAAa,CAACxE,EAE3B,IACOsE,CACT,C,0iCCIA,IAgNA,GA/MgB,WAAM,UACpB,GAA+BtK,EAAAA,EAAAA,MAAvBC,EAAS,EAATA,UAAWC,EAAO,EAAPA,QACZuD,EAA8B,GAApBC,EAAUzD,GAAU,GAAxB,GACCQ,GAAaF,EAAAA,EAAAA,IAAc,aAAcC,EAAAA,GAA/CE,KACMmK,GAAiBtK,EAAAA,EAAAA,IAAM,0BAAgCN,EAAS,aAAaO,EAAAA,GAAnFE,KACF6D,EAAcsG,aAAY,EAAZA,EAAcC,MAAK,SAACvD,GAAC,OAAKA,EAAEvG,OAASd,CAAO,IAChE,GAII6K,EAAAA,GAAAA,KACF,SAACnE,GAAK,gCAAwB3G,EAAS,qBAAaC,EAAO,0BAZ7C,GAYwE,iBAAS0G,EAAQ,EAAC,GACxGpG,EAAAA,EACA,CACEwK,UAAS,SAACtK,GACa,KAAjBA,aAAI,EAAJA,EAAMuK,SACRC,YAAW,WAAM,MACK,QAApB,EAAAlC,EAAa3C,eAAO,OAApB,EAAsB8E,gBACxB,GAAG,IAEP,IAbIC,EAAQ,EAAd1K,KACQ2K,EAAU,EAAlB1K,OACAyI,EAAO,EAAPA,QAcYkC,GAAuB/K,EAAAA,EAAAA,IACnCE,EAAW,mBAAH,OAAsBR,EAAS,qBAAaC,EAAO,YAAa,KACxEM,EAAAA,GAFME,KAI0C,MAAZP,EAAAA,EAAAA,GAAS,IAAG,GAA3C6F,EAAI,KAAEC,EAAY,KAAEsF,EAAO,KACyC,MAAf5H,EAAAA,EAAAA,WAAS,GAAM,GAApE6H,EAAsB,KAAEhH,EAAyB,KAClDwE,GAAe5C,EAAAA,EAAAA,QAAmB,MACO,MAAfzC,EAAAA,EAAAA,WAAS,GAAM,GAAxC8H,EAAQ,KAAEC,EAAW,KAEtBxC,EAAoC,KAA1BkC,SAAa,QAAL,EAARA,EAAW,UAAE,WAAL,EAAR,EAAeH,QACzBhC,EAAgBC,GAAYkC,IAAyC,QAA7B,EAAAA,EAASA,EAASH,OAAS,UAAE,aAA7B,EAA+BA,QAlC7D,GAoCVvL,GAAeE,EAAAA,EAAAA,cAAY,WAC/B4E,GAA0B,EAC5B,GAAG,IAEGuB,GAAenG,EAAAA,EAAAA,cACnB,SAACC,GAEC,GADAA,EAAEiB,iBACEkF,SAAAA,EAAMlB,QAAUsG,GAAY7G,GAAe9D,EAAU,CACvD,IAAMkL,EAAY3F,EAClBqF,GAAW,SAACO,GAAiB,MAU3B,OATAA,SAAAA,EAAe,GAAGC,QAAQ,CACxBlK,KAAmB,QAAd,EAAAyJ,EAAS,GAAG,UAAE,aAAd,EAAgBzJ,KAAM,GAAK,EAChCyG,QAASuD,EACTG,OAAQrL,EAASkB,GACjBoG,KAAMtH,EACNiI,UAAW,IAAIqD,KACfC,UAAWzH,EAAY5C,GACvBsK,QAAS1H,IAEJqH,CACT,IAAG,GAAO1K,MAAK,WAGa,MAF1BqB,aAAa2J,QAAQ,GAAD,OAAIjM,EAAS,YAAIC,IAAW,IAAI6L,MAAOI,UAAUxD,YACrE4C,EAAQ,IACJvC,EAAa3C,UACfhF,QAAQ8B,IAAI,kBAAuC,QAAtB,EAAE6F,EAAa3C,eAAO,aAApB,EAAsB+F,aACrDpD,EAAa3C,QAAQ8E,iBAEzB,IACApK,EAAAA,EAAAA,KACQ,mBAAD,OAAoBd,EAAS,qBAAaC,EAAO,UAAU,CAC9DkI,QAASuD,IAEVxK,MAAME,QAAQD,MACnB,CACF,GACA,CAAC4E,EAAM/F,EAAWC,EAASqE,EAAa9D,EAAU2K,EAAUC,EAAYE,IAGpEc,GAAYzM,EAAAA,EAAAA,cAChB,SAACc,GAEGA,EAAKuL,QAAQjL,OAASd,IACrBQ,EAAK0H,QAAQkE,WAAW,cAAgB5L,EAAK0H,QAAQkE,WAAW,aAAe5L,EAAKoL,UAAWrL,aAAQ,EAARA,EAAUkB,MAE1G0J,GAAW,SAACD,GAEV,OADAA,SAAAA,EAAW,GAAGS,QAAQnL,GACf0K,CACT,IAAG,GAAOlK,MAAK,WAKT,MAJA8H,EAAa3C,UAEb2C,EAAa3C,QAAQoD,kBACrBT,EAAa3C,QAAQkG,kBAAoBvD,EAAa3C,QAAQmG,eAAiB,KAE/EnL,QAAQ8B,IAAI,kBAAuC,QAAtB,EAAE6F,EAAa3C,eAAO,aAApB,EAAsB+F,aACrDlB,YAAW,WAAM,MACK,QAApB,EAAAlC,EAAa3C,eAAO,OAApB,EAAsB8E,gBACxB,GAAG,MAEH5J,EAAAA,GAAAA,QAAc,iBAAkB,CAC9BzB,QAAO,WAAG,MACY,QAApB,EAAAkJ,EAAa3C,eAAO,OAApB,EAAsB8E,gBACxB,EACAsB,cAAc,IAItB,GAEJ,GACA,CAACvM,EAASO,EAAU4K,KAGtB3I,EAAAA,EAAAA,YAAU,WAER,OADAe,SAAAA,EAAQS,GAAG,UAAWmI,GACf,WACL5I,SAAAA,EAAQW,IAAI,UAAWiI,EACzB,CACF,GAAG,CAAC5I,EAAQ4I,KAEZ3J,EAAAA,EAAAA,YAAU,WACRH,aAAa2J,QAAQ,GAAD,OAAIjM,EAAS,YAAIC,IAAW,IAAI6L,MAAOI,UAAUxD,WACvE,GAAG,CAAC1I,EAAWC,IAEf,IAAMwM,GAAuB9M,EAAAA,EAAAA,cAAY,WACvC4E,GAA0B,EAC5B,GAAG,IAEGmI,GAAS/M,EAAAA,EAAAA,cACb,SAACC,GACCA,EAAEiB,iBACFO,QAAQ8B,IAAItD,GACZ,IAAM+M,EAAW,IAAIC,SACrB,GAAIhN,EAAEiN,aAAaC,OAEjB,IAAK,IAAIC,EAAI,EAAGA,EAAInN,EAAEiN,aAAaC,MAAM9B,OAAQ+B,IAG/C,GADA3L,QAAQ8B,IAAItD,EAAEiN,aAAaC,MAAMC,IACI,SAAjCnN,EAAEiN,aAAaC,MAAMC,GAAGC,KAAiB,CAC3C,IAAMC,EAAOrN,EAAEiN,aAAaC,MAAMC,GAAGG,YACrC9L,QAAQ8B,IAAItD,EAAG,aAAemN,EAAI,YAAcE,EAAKlM,MACrD4L,EAASQ,OAAO,QAASF,EAC3B,OAIF,IAAK,IAAIF,EAAI,EAAGA,EAAInN,EAAEiN,aAAaO,MAAMpC,OAAQ+B,IAC/C3L,QAAQ8B,IAAItD,EAAG,YAAcmN,EAAI,YAAcnN,EAAEiN,aAAaO,MAAML,GAAGhM,MACvE4L,EAASQ,OAAO,QAASvN,EAAEiN,aAAaO,MAAML,IAGlDjM,EAAAA,EAAAA,KAAW,mBAAD,OAAoBd,EAAS,qBAAaC,EAAO,WAAW0M,GAAU1L,MAAK,WACnFwK,GAAY,GACZnJ,aAAa2J,QAAQ,GAAD,OAAIjM,EAAS,YAAIC,IAAW,IAAI6L,MAAOI,UAAUxD,WACvE,GACF,GACA,CAAC1I,EAAWC,IAGRoN,GAAa1N,EAAAA,EAAAA,cAAY,SAACC,GAC9BA,EAAEiB,iBACFO,QAAQ8B,IAAItD,GACZ6L,GAAY,EACd,GAAG,IAEH,GAAIb,IAAiBtG,EACnB,OAAO,gBAAC,KAAQ,CAACzB,GAAE,qBAAgB7C,EAAS,iBAG9C,I,EAAMkJ,EAAeiB,GAAYgB,GAAY,MAAemC,OAAM,S,EAAInC,E,0VAAUoC,UAAY,IAE5F,OACE,gBAACvD,GAAS,CAAC0C,OAAQA,EAAQW,WAAYA,GACrC,gBAACpD,GAAM,KACL,4BAAM,IAAEhK,GACR,uBAAKmF,MAAO,CAAEmC,QAAS,OAAQiG,KAAM,EAAGC,eAAgB,WAAYC,WAAY,WAC9E,4BAAOrC,aAAkB,EAAlBA,EAAoBL,QAC3B,0BACEnL,QAAS4M,EACT3J,UAAU,8CACV,aAAW,8BACX,UAAQ,iBACRjB,KAAK,UAEL,qBAAGiB,UAAU,yDAAyD,cAAY,YAIxF,gBAAC,GAAQ,CACPiG,aAAcA,EACdC,cAAeA,EACfC,QAASA,EACTC,aAAcA,EACdC,QAASA,IAEX,gBAAC,EAAO,CACNrD,aAAcA,EACdC,KAAMA,EACNC,aAAcA,EACdC,YAAW,mBAAchG,GACzBQ,KAAM4K,IAER,gBAAC,EAAkB,CACjB9L,KAAMgM,EACN9L,aAAcA,EACd8E,0BAA2BA,IAE7B,gBAAC,KAAc,CAAC/C,SAAS,kBACxBgK,GAAY,gBAACtB,GAAQ,KAAC,QAG7B,EC9NaF,IAAS,uJAQTC,IAAM,uR,2hCCQnB,IA8KA,GA7KsB,WAAM,UAC1B,GAA0BlK,EAAAA,EAAAA,MAAlBC,EAAS,EAATA,UAAW0B,EAAE,EAAFA,GACZ8B,EAA8B,GAApBC,EAAUzD,GAAU,GAAxB,GACC2N,GAAWrN,EAAAA,EAAAA,IAAO,aAAcC,EAAAA,GAAtCE,KACMD,GAAaF,EAAAA,EAAAA,IAAO,mBAAD,OAAoBN,EAAS,kBAAU0B,GAAMnB,EAAAA,GAAtEE,KACR,GAIIqK,EAAAA,GAAAA,KACF,SAACnE,GAAK,gCAAwB3G,EAAS,gBAAQ0B,EAAE,0BAXnC,GAW8D,iBAASiF,EAAQ,EAAC,GAC9FpG,EAAAA,EACA,CACEwK,UAAS,SAACtK,GACa,KAAjBA,aAAI,EAAJA,EAAMuK,SACRC,YAAW,WAAM,MACK,QAApB,EAAAlC,EAAa3C,eAAO,OAApB,EAAsB8E,gBACxB,GAAG,IAEP,IAbIC,EAAQ,EAAd1K,KACQ2K,EAAU,EAAlB1K,OACAyI,EAAO,EAAPA,QAcgD,MAAZjJ,EAAAA,EAAAA,GAAS,IAAG,GAA3C6F,EAAI,KAAEC,EAAY,KAAEsF,EAAO,KAC5BvC,GAAe5C,EAAAA,EAAAA,QAAmB,MACO,MAAfzC,EAAAA,EAAAA,WAAS,GAAM,GAAxC8H,EAAQ,KAAEC,EAAW,KAEtBxC,EAAoC,KAA1BkC,SAAa,QAAL,EAARA,EAAW,UAAE,WAAL,EAAR,EAAeH,QACzBhC,EAAgBC,GAAYkC,IAAyC,QAA7B,EAAAA,EAASA,EAASH,OAAS,UAAE,aAA7B,EAA+BA,QA5B7D,GA8BVlF,GAAenG,EAAAA,EAAAA,cACnB,SAACC,GAEC,GADAA,EAAEiB,iBACEkF,SAAAA,EAAMlB,QAAUsG,EAAU,CAC5B,IAAMO,EAAY3F,EAClBqF,GAAW,SAACO,GAAiB,MAU3B,OATAA,SAAAA,EAAe,GAAGC,QAAQ,CACxBlK,KAAmB,QAAd,EAAAyJ,EAAS,GAAG,UAAE,aAAd,EAAgBzJ,KAAM,GAAK,EAChCyG,QAASuD,EACTkC,SAAUD,EAAOjM,GACjBmG,OAAQ8F,EACRE,WAAYrN,EAASkB,GACrBoM,SAAUtN,EACViI,UAAW,IAAIqD,OAEVH,CACT,IAAG,GAAO1K,MAAK,WAGa,MAF1BqB,aAAa2J,QAAQ,GAAD,OAAIjM,EAAS,YAAI0B,IAAM,IAAIoK,MAAOI,UAAUxD,YAChE4C,EAAQ,IACJvC,EAAa3C,UACfhF,QAAQ8B,IAAI,kBAAuC,QAAtB,EAAE6F,EAAa3C,eAAO,aAApB,EAAsB+F,aACrDpD,EAAa3C,QAAQ8E,iBAEzB,IACApK,EAAAA,EAAAA,KACQ,mBAAD,OAAoBd,EAAS,gBAAQ0B,EAAE,UAAU,CACpDyG,QAASpC,IAEV7E,MAAME,QAAQD,MACnB,CACF,GACA,CAAC4E,EAAM/F,EAAW0B,EAAIiM,EAAQnN,EAAU2K,EAAUC,EAAYE,IAG1Dc,GAAYzM,EAAAA,EAAAA,cAChB,SAACc,GACKA,EAAKmN,WAAaG,OAAOrM,IAAOiM,EAAOjM,KAAOqM,OAAOrM,IACvD0J,GAAW,SAACD,GAEV,OADAA,SAAAA,EAAW,GAAGS,QAAQnL,GACf0K,CACT,IAAG,GAAOlK,MAAK,WAKT,MAJA8H,EAAa3C,UAEb2C,EAAa3C,QAAQoD,kBACrBT,EAAa3C,QAAQkG,kBAAoBvD,EAAa3C,QAAQmG,eAAiB,KAE/EnL,QAAQ8B,IAAI,kBAAuC,QAAtB,EAAE6F,EAAa3C,eAAO,aAApB,EAAsB+F,aACrDlB,YAAW,WAAM,MACK,QAApB,EAAAlC,EAAa3C,eAAO,OAApB,EAAsB8E,gBACxB,GAAG,MAEH5J,EAAAA,GAAAA,QAAc,iBAAkB,CAC9BzB,QAAO,WAAG,MACY,QAApB,EAAAkJ,EAAa3C,eAAO,OAApB,EAAsB8E,gBACxB,EACAsB,cAAc,IAItB,GAEJ,GACA,CAAC9K,EAAIiM,EAAQvC,KAGf3I,EAAAA,EAAAA,YAAU,WAER,OADAe,SAAAA,EAAQS,GAAG,KAAMmI,GACV,WACL5I,SAAAA,EAAQW,IAAI,KAAMiI,EACpB,CACF,GAAG,CAAC5I,EAAQ4I,KAEZ3J,EAAAA,EAAAA,YAAU,WACRH,aAAa2J,QAAQ,GAAD,OAAIjM,EAAS,YAAI0B,IAAM,IAAIoK,MAAOI,UAAUxD,WAClE,GAAG,CAAC1I,EAAW0B,IAEf,IAAMgL,GAAS/M,EAAAA,EAAAA,cACb,SAACC,GACCA,EAAEiB,iBACFO,QAAQ8B,IAAItD,GACZ,IAAM+M,EAAW,IAAIC,SACrB,GAAIhN,EAAEiN,aAAaC,OAEjB,IAAK,IAAIC,EAAI,EAAGA,EAAInN,EAAEiN,aAAaC,MAAM9B,OAAQ+B,IAE/C,GAAqC,SAAjCnN,EAAEiN,aAAaC,MAAMC,GAAGC,KAAiB,CAC3C,IAAMC,EAAOrN,EAAEiN,aAAaC,MAAMC,GAAGG,YACrC9L,QAAQ8B,IAAI,YAAc6J,EAAI,YAAcE,EAAKlM,MACjD4L,EAASQ,OAAO,QAASF,EAC3B,OAIF,IAAK,IAAIF,EAAI,EAAGA,EAAInN,EAAEiN,aAAaO,MAAMpC,OAAQ+B,IAC/C3L,QAAQ8B,IAAI,YAAc6J,EAAI,YAAcnN,EAAEiN,aAAaO,MAAML,GAAGhM,MACpE4L,EAASQ,OAAO,QAASvN,EAAEiN,aAAaO,MAAML,IAGlDjM,EAAAA,EAAAA,KAAW,mBAAD,OAAoBd,EAAS,gBAAQ0B,EAAE,WAAWiL,GAAU1L,MAAK,WACzEwK,GAAY,GACZnJ,aAAa2J,QAAQ,GAAD,OAAIjM,EAAS,YAAI0B,IAAM,IAAIoK,MAAOI,UAAUxD,YAChE0C,GACF,GACF,GACA,CAACpL,EAAW0B,EAAI0J,IAGZiC,GAAa1N,EAAAA,EAAAA,cAAY,SAACC,GAC9BA,EAAEiB,iBACFO,QAAQ8B,IAAItD,GACZ6L,GAAY,EACd,GAAG,IAEH,IAAKjL,IAAamN,EAChB,OAAO,KAGT,I,EAAMzE,EAAeiB,GAAYgB,GAAY,MAAamC,OAAM,S,EAAInC,E,0VAAUoC,UAAY,IAE1F,OACE,gBAAC,GAAS,CAACb,OAAQA,EAAQW,WAAYA,GACrC,gBAAC,GAAM,KACL,uBAAKzG,IAAKC,IAAAA,IAAarG,EAASsE,MAAO,CAAEgC,EAAG,OAAQC,EAAG,UAAYC,IAAKxG,EAASwC,WACjF,4BAAOxC,EAASwC,WAElB,gBAAC,GAAQ,CACP+F,aAAcA,EACdC,cAAeA,EACfC,QAASA,EACTC,aAAcA,EACdC,QAASA,IAEX,gBAAC,EAAO,CACNrD,aAAcA,EACdC,KAAMA,EACNC,aAAcA,EACdC,YAAW,kBAAazF,EAASwC,YAGlCwI,GAAY,gBAACtB,GAAQ,KAAC,QAG7B,E,QC5LO,IAAM8D,IAAS,0EAIT/D,IAAM,0LASNgE,IAAU,2HAQVC,IAAY,oRAyBZC,IAAY,8NAYZC,IAAgB,iFAKhBC,IAAU,2RAaVC,IAAQ,2pBAoDRC,IAAa,kYAqBbC,IAAU,yGAKVC,IAAc,oSAsBdC,IAAK,oEAILC,IAAS,yLAWTC,IAAe,sP,shCCzJ5B,IAoMA,GApMkB,WAAM,cACyD,MAAflL,EAAAA,EAAAA,WAAS,GAAM,GAAxEmL,EAAwB,KAAEC,EAA2B,KACmB,MAAfpL,EAAAA,EAAAA,WAAS,GAAM,GAAxEqL,EAAwB,KAAEhK,EAA2B,KACe,MAAfrB,EAAAA,EAAAA,WAAS,GAAM,GAApE6H,EAAsB,KAAEhH,EAAyB,KACmB,MAAfb,EAAAA,EAAAA,WAAS,GAAM,GAApEsL,EAAsB,KAAElP,EAAyB,KACD,MAAf4D,EAAAA,EAAAA,WAAS,GAAM,GAAhDuL,EAAY,KAAEC,EAAe,KAC+B,MAAfxL,EAAAA,EAAAA,WAAS,GAAM,GAA5DyL,EAAkB,KAAEC,EAAqB,KAC0B,MAAZlP,EAAAA,EAAAA,GAAS,IAAG,GAAnEmP,EAAY,KAAEC,EAAoB,KAAEC,EAAe,KACF,MAAZrP,EAAAA,EAAAA,GAAS,IAAG,GAAjDsP,EAAM,KAAEC,EAAc,KAAEC,EAAS,KAGhC1P,GADOD,EAAAA,EAAAA,MACPC,UAER,GAAmDM,EAAAA,EAAAA,IAAsB,aAAcC,EAAAA,GAAzEC,EAAQ,EAAdC,KAAwBkP,EAAc,EAAtBjP,OACV4D,GAAgBhE,EAAAA,EAAAA,IAAmBE,EAAW,mBAAH,OAAsBR,EAAS,aAAc,KAAMO,EAAAA,GAApGE,KACR,IAAwDH,EAAAA,EAAAA,IACtDE,EAAW,mBAAH,OAAsBR,EAAS,YAAa,KACpDO,EAAAA,GAE+C,IAJzB,GAAhBE,KAA2C,GAAzBC,OAIuB,GAApB+C,EAAUzD,GAAU,IAA1CwD,GAAM,MAAEL,GAAU,OAEzBV,EAAAA,EAAAA,YAAU,WACJ6B,GAAe9D,GAAYgD,KAC7BpC,QAAQ8B,IAAIM,IACZA,GAAOoM,KAAK,QAAS,CAAElO,GAAIlB,EAASkB,GAAImO,SAAUvL,EAAYF,KAAI,SAACkD,GAAC,OAAKA,EAAE5F,EAAE,MAEjF,GAAG,CAAC8B,GAAQc,EAAa9D,KAEzBiC,EAAAA,EAAAA,YAAU,WACR,OAAO,WACLU,IACF,CACF,GAAG,CAACnD,EAAWmD,KAEf,IAAM2M,IAAWnQ,EAAAA,EAAAA,cAAY,WAC3BmB,EAAAA,EAAAA,KACQ,qBACLG,MAAK,WACJ0O,GACF,IACCzO,OAAM,SAACC,GAAU,MAChBC,QAAQC,IAAIF,GACZG,EAAAA,GAAAA,MAA0B,QAAf,EAACH,EAAMI,gBAAQ,aAAd,EAAgBd,KAAM,CAAEe,SAAU,iBAChD,GACJ,GAAG,IAEGuO,IAAoBpQ,EAAAA,EAAAA,cACxB,SAACC,GACCA,EAAEiB,iBACGwO,GAAiBA,EAAaxK,QAG9B2K,GAAWA,EAAO3K,QAGvB/D,EAAAA,EAAAA,KACQ,kBAAmB,CACvBd,UAAWqP,EACXW,IAAKR,IAENvO,MAAK,WACJ0O,IACAb,GAA4B,GAC5BS,EAAgB,IAChBG,EAAU,GACZ,IACCxO,OAAM,SAACC,GAAU,MAChBC,QAAQC,IAAIF,GACZG,EAAAA,GAAAA,MAA0B,QAAf,EAACH,EAAMI,gBAAQ,aAAd,EAAgBd,KAAM,CAAEe,SAAU,iBAChD,GACJ,GACA,CAAC6N,EAAcG,IAGXS,IAAyBtQ,EAAAA,EAAAA,cAAY,WACzCmP,GAA4B,EAC9B,GAAG,IAEGoB,IAAoBvQ,EAAAA,EAAAA,cAAY,WACpCG,GAA0B,EAC5B,GAAG,IAEGqQ,IAAyBxQ,EAAAA,EAAAA,cAAY,WACzCoF,GAA4B,EAC9B,GAAG,IAEGtF,IAAeE,EAAAA,EAAAA,cAAY,WAC/BmP,GAA4B,GAC5BhP,GAA0B,GAC1BiF,GAA4B,GAC5BR,GAA0B,EAC5B,GAAG,IAEG6L,IAAqBzQ,EAAAA,EAAAA,cAAY,WACrCuP,GAAgB,SAAClL,GAAI,OAAMA,CAAI,GACjC,GAAG,IAEGqM,IAAuB1Q,EAAAA,EAAAA,cAAY,WACvCyP,GAAsB,SAACpL,GAAI,OAAMA,CAAI,GACvC,GAAG,IAEH,OAAiB,IAAbxD,EACK,gBAAC,KAAQ,CAACqC,GAAG,WAIpB,2BACE,gBAAC,GAAM,KACJrC,GACC,gBAACwN,GAAS,KACR,wBAAMnO,QAASuQ,IACb,gBAACnC,GAAU,CAACrH,IAAKC,IAAAA,IAAarG,EAASsE,MAAO,CAAEgC,EAAG,OAAQC,EAAG,UAAYC,IAAKxG,EAASwC,YAEzFiM,GACC,gBAAC,EAAI,CAAC7J,MAAO,CAAEkL,MAAO,EAAGC,IAAK,IAAMhR,KAAM0P,EAAcxP,aAAc2Q,IACpE,gBAAClC,GAAY,KACX,uBAAKtH,IAAKC,IAAAA,IAAarG,EAASsE,MAAO,CAAEgC,EAAG,OAAQC,EAAG,UAAYC,IAAKxG,EAASwC,WACjF,2BACE,wBAAMtB,GAAG,gBAAgBlB,EAASwC,UAClC,wBAAMtB,GAAG,kBAAiB,YAG9B,gBAACyM,GAAY,CAACtO,QAASiQ,IAAU,WAM3C,gBAAC1B,GAAgB,KACf,gBAACC,GAAU,KACR7N,SAAoB,QAAZ,EAARA,EAAU6N,kBAAU,WAAZ,EAAR,EAAsBjK,KAAI,SAACoM,GAC1B,OACE,gBAAC,KAAI,CAAC7N,IAAK6N,EAAG9O,GAAImB,GAAE,qBAAgB2N,EAAGR,IAAG,gBACxC,gBAACpB,GAAe,KAAE4B,EAAGzP,KAAK0P,MAAM,EAAG,GAAGC,eAG5C,IACA,gBAAC/B,GAAS,CAAC9O,QAASoQ,IAAwB,MAE9C,gBAAC3B,GAAQ,KACP,gBAACC,GAAa,CAAC1O,QAASwQ,IACrB7P,SAAoB,QAAZ,EAARA,EAAU6N,kBAAU,OAAkC,QAAlC,EAApB,EAAsBxD,MAAK,SAACvD,GAAC,OAAKA,EAAE0I,MAAQhQ,CAAS,WAAC,WAA9C,EAAR,EAAwDe,MAE3D,gBAACyN,GAAU,KACT,gBAAC,EAAI,CAACjP,KAAM4P,EAAoB1P,aAAc4Q,GAAsBjL,MAAO,CAAEmL,IAAK,GAAII,KAAM,KAC1F,gBAAClC,GAAc,KACb,0BAAKjO,SAAoB,QAAZ,EAARA,EAAU6N,kBAAU,OAAkC,QAAlC,EAApB,EAAsBxD,MAAK,SAACvD,GAAC,OAAKA,EAAE0I,MAAQhQ,CAAS,WAAC,WAA9C,EAAR,EAAwDe,MAC7D,0BAAQlB,QAASsQ,IAAwB,kBACzC,0BAAQtQ,QAASqQ,IAAmB,UACpC,0BAAQrQ,QAASiQ,IAAU,UAG/B,gBAAC,EAAW,MACZ,gBAAC,EAAM,QAGX,gBAACpB,GAAK,KACJ,gBAAC,KAAM,KACL,gBAAC,KAAK,CAACkC,KAAK,yCAAyCC,UAAW7E,KAChE,gBAAC,KAAK,CAAC4E,KAAK,+BAA+BC,UAAWC,QAI5D,gBAAC,EAAK,CAACvR,KAAMsP,EAA0BpP,aAAcA,IACnD,wBAAMgC,SAAUsO,IACd,gBAAC,KAAK,CAACrO,GAAG,mBACR,4BAAM,aACN,gBAAC,KAAK,CAACA,GAAG,YAAYC,MAAO0N,EAAczN,SAAU0N,KAEvD,gBAAC,KAAK,CAAC5N,GAAG,uBACR,4BAAM,cACN,gBAAC,KAAK,CAACA,GAAG,gBAAgBC,MAAO6N,EAAQ5N,SAAU6N,KAErD,gBAAC,KAAM,CAAC5N,KAAK,UAAS,UAG1B,gBAAC,EAAkB,CACjBtC,KAAMyP,EACNvP,aAAcA,GACdK,0BAA2BA,IAE7B,gBAAC,EAAoB,CACnBP,KAAMwP,EACNtP,aAAcA,GACdsF,4BAA6BA,IAE/B,gBAAC,EAAkB,CACjBxF,KAAMgM,EACN9L,aAAcA,GACd8E,0BAA2BA,IAE7B,gBAAC,KAAc,CAAC/C,SAAS,kBAG/B,C","sources":["webpack://sleact/./components/Modal/styles.tsx","webpack://sleact/./components/Modal/index.tsx","webpack://sleact/./components/CreateChannelModal/index.tsx","webpack://sleact/./components/DMList/styles.tsx","webpack://sleact/./components/EachDM/index.tsx","webpack://sleact/./hooks/useSocket.ts","webpack://sleact/./components/DMList/index.tsx","webpack://sleact/./components/EachChannel/index.tsx","webpack://sleact/./components/ChannelList/index.tsx","webpack://sleact/./components/InviteChannelModal/index.tsx","webpack://sleact/./components/InviteWorkspaceModal/index.tsx","webpack://sleact/./components/Menu/styles.tsx","webpack://sleact/./components/Menu/index.tsx","webpack://sleact/./components/ChatBox/styles.tsx","webpack://sleact/./components/ChatBox/index.tsx","webpack://sleact/./components/Chat/styles.tsx","webpack://sleact/./components/Chat/index.tsx","webpack://sleact/./components/ChatList/styles.tsx","webpack://sleact/./components/ChatList/index.tsx","webpack://sleact/./pages/Channel/styles.tsx","webpack://sleact/./utils/makeSection.ts","webpack://sleact/./pages/Channel/index.tsx","webpack://sleact/./pages/DirectMessage/styles.tsx","webpack://sleact/./pages/DirectMessage/index.tsx","webpack://sleact/./layouts/Workspace/styles.tsx","webpack://sleact/./layouts/Workspace/index.tsx"],"sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const CreateModal = styled.div`\r\n  position: fixed;\r\n  text-align: center;\r\n  left: 0;\r\n  bottom: 0;\r\n  top: 0;\r\n  right: 0;\r\n  z-index: 1022;\r\n\r\n  & > div {\r\n    margin-top: 200px;\r\n    display: inline-block;\r\n    width: 440px;\r\n    background: white;\r\n    --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\r\n    box-shadow: 0 0 0 1px var(--saf-0), 0 4px 12px 0 rgba(0, 0, 0, 0.12);\r\n    background-color: rgba(var(--sk_foreground_min_solid, 248, 248, 248), 1);\r\n    border-radius: 6px;\r\n    user-select: none;\r\n    max-width: 440px;\r\n    padding: 30px 40px 0;\r\n    z-index: 1012;\r\n    position: relative;\r\n  }\r\n`;\r\n\r\nexport const CloseModalButton = styled.button`\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 6px;\r\n  background: transparent;\r\n  border: none;\r\n  font-size: 30px;\r\n  cursor: pointer;\r\n`;\r\n","import { CreateModal, CloseModalButton } from '@components/Modal/styles';\r\nimport React, { FC, PropsWithChildren, useCallback } from 'react';\r\n\r\ninterface Props {\r\n  show: boolean;\r\n  onCloseModal: () => void;\r\n}\r\n\r\nconst Modal: FC<PropsWithChildren<Props>> = ({ show, children, onCloseModal }) => {\r\n  const stopPropagation = useCallback((e: any) => {\r\n    e.stopPropagation();\r\n  }, []);\r\n\r\n  if (!show) {\r\n    return null;\r\n  }\r\n  return (\r\n    <CreateModal onClick={onCloseModal}>\r\n      <div onClick={stopPropagation}>\r\n        <CloseModalButton onClick={onCloseModal}>&times;</CloseModalButton>\r\n        {children}\r\n      </div>\r\n    </CreateModal>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import Modal from '@components/Modal';\r\nimport useInput from '@hooks/useInput';\r\nimport { Button, Input, Label } from '@pages/SignUp/styles';\r\nimport { IChannel, IUser } from '@typings/db';\r\nimport fetcher from '@utils/fetcher';\r\nimport axios from 'axios';\r\nimport React, { FC, useCallback, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { toast } from 'react-toastify';\r\nimport useSWR from 'swr';\r\n\r\ninterface Props {\r\n  show: boolean;\r\n  onCloseModal: () => void;\r\n  setShowCreateChannelModal: (flag: boolean) => void;\r\n}\r\n\r\nconst CreateChannelModal: FC<Props> = ({ show, onCloseModal, setShowCreateChannelModal }) => {\r\n  const { workspace, channel } = useParams<{ workspace: string; channel: string }>();\r\n  const [newChannel, onChangeNewChannel, setNewChannel] = useInput('');\r\n\r\n  const { data: userData, mutate: revalidateUser } = useSWR<IUser | false>('/api/users', fetcher);\r\n  const { data: channelData, mutate: revalidateChannel } = useSWR<IChannel[]>(\r\n    userData ? `/api/workspaces/${workspace}/channels` : null,\r\n    fetcher,\r\n  );\r\n\r\n  const onCreateChannel = useCallback(\r\n    (e: any) => {\r\n      e.preventDefault();\r\n      axios\r\n        .post(\r\n          `/api/workspaces/${workspace}/channels`,\r\n          {\r\n            name: newChannel,\r\n          },\r\n          {\r\n            withCredentials: true,\r\n          },\r\n        )\r\n        .then(() => {\r\n          setShowCreateChannelModal(false);\r\n          revalidateChannel();\r\n          setNewChannel('');\r\n        })\r\n        .catch((error) => {\r\n          console.dir(error);\r\n          toast.error(error.response?.data, { position: 'bottom-center' });\r\n        });\r\n    },\r\n    [newChannel],\r\n  );\r\n\r\n  return (\r\n    <Modal show={show} onCloseModal={onCloseModal}>\r\n      <form onSubmit={onCreateChannel}>\r\n        <Label id=\"channel-label\">\r\n          <span>채널</span>\r\n          <Input id=\"channel\" value={newChannel} onChange={onChangeNewChannel} />\r\n        </Label>\r\n        <Button type=\"submit\">생성하기</Button>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CreateChannelModal;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const CollapseButton = styled.button<{ collapse: boolean }>`\r\n  background: transparent;\r\n  border: none;\r\n  width: 26px;\r\n  height: 26px;\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: white;\r\n  margin-left: 10px;\r\n  cursor: pointer;\r\n\r\n  ${({ collapse }) =>\r\n    collapse &&\r\n    `\r\n    & i {\r\n      transform: none;\r\n    }\r\n  `};\r\n`;\r\n","import { IUser } from '@typings/db';\r\nimport fetcher from '@utils/fetcher';\r\nimport React, { useEffect, VFC } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { NavLink, useLocation } from 'react-router-dom';\r\nimport useSWR from 'swr';\r\n\r\ninterface Props {\r\n  member: IUser;\r\n  isOnline: boolean;\r\n}\r\nconst EachDM: VFC<Props> = ({ member, isOnline }) => {\r\n  const { workspace } = useParams<{ workspace?: string }>();\r\n  const location = useLocation();\r\n  const { data: userData } = useSWR<IUser>('/api/users', fetcher, {\r\n    dedupingInterval: 2000, // 2초\r\n  });\r\n  const date = localStorage.getItem(`${workspace}-${member.id}`) || 0;\r\n  const { data: count, mutate } = useSWR<number>(\r\n    userData ? `/api/workspaces/${workspace}/dms/${member.id}/unreads?after=${date}` : null,\r\n    fetcher,\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (location.pathname === `/workspace/${workspace}/dm/${member.id}`) {\r\n      mutate(0);\r\n    }\r\n  }, [mutate, location.pathname, workspace, member]);\r\n\r\n  return (\r\n    <NavLink key={member.id} activeClassName=\"selected\" to={`/workspace/${workspace}/dm/${member.id}`}>\r\n      <i\r\n        className={`c-icon p-channel_sidebar__presence_icon p-channel_sidebar__presence_icon--dim_enabled c-presence ${\r\n          isOnline ? 'c-presence--active c-icon--presence-online' : 'c-icon--presence-offline'\r\n        }`}\r\n        aria-hidden=\"true\"\r\n        data-qa=\"presence_indicator\"\r\n        data-qa-presence-self=\"false\"\r\n        data-qa-presence-active=\"false\"\r\n        data-qa-presence-dnd=\"false\"\r\n      />\r\n      <span className={count && count > 0 ? 'bold' : undefined}>{member.nickname}</span>\r\n      {member.id === userData?.id && <span> (나)</span>}\r\n      {(count && count > 0 && <span className=\"count\">{count}</span>) || null}\r\n    </NavLink>\r\n  );\r\n};\r\n\r\nexport default EachDM;\r\n","import io from 'socket.io-client';\r\nimport { useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport { Socket } from 'socket.io-client/build/esm/socket';\r\n\r\nconst backUrl = 'http://localhost:3095';\r\n\r\nconst sockets: { [key: string]: Socket } = {};\r\nconst useSocket = (workspace?: string): [Socket | undefined, () => void] => {\r\n  console.log('render', workspace);\r\n  const disconnect = useCallback(() => {\r\n    if (workspace) {\r\n      sockets[workspace].disconnect();\r\n      delete sockets[workspace];\r\n    }\r\n  }, [workspace]);\r\n\r\n  if (!workspace) return [undefined, disconnect];\r\n\r\n  if (!sockets[workspace]) {\r\n    sockets[workspace] = io(`${backUrl}/ws-${workspace}`, {\r\n      transports: ['websocket'],\r\n    });\r\n\r\n    console.info('create socket', workspace, sockets[workspace]);\r\n  }\r\n\r\n  return [sockets[workspace], disconnect];\r\n};\r\n\r\nexport default useSocket;\r\n","// import useSocket from '@hooks/useSocket';\r\nimport { CollapseButton } from '@components/DMList/styles';\r\nimport EachDM from '@components/EachDM';\r\nimport useSocket from '@hooks/useSocket';\r\nimport { IDM, IUser, IUserWithOnline } from '@typings/db';\r\nimport fetcher from '@utils/fetcher';\r\nimport React, { FC, useCallback, useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { NavLink } from 'react-router-dom';\r\nimport useSWR from 'swr';\r\n\r\nconst DMList = () => {\r\n  const { workspace } = useParams<{ workspace?: string }>();\r\n  const { data: userData } = useSWR<IUser>('/api/users', fetcher, {\r\n    dedupingInterval: 2000, // 2초\r\n  });\r\n  const { data: memberData } = useSWR<IUserWithOnline[]>(\r\n    userData ? `/api/workspaces/${workspace}/members` : null,\r\n    fetcher,\r\n  );\r\n  const [socket] = useSocket(workspace);\r\n  const [channelCollapse, setChannelCollapse] = useState(false);\r\n  const [onlineList, setOnlineList] = useState<number[]>([]);\r\n\r\n  const toggleChannelCollapse = useCallback(() => {\r\n    setChannelCollapse((prev) => !prev);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log('DMList: workspace 바꼈다', workspace);\r\n    setOnlineList([]);\r\n  }, [workspace]);\r\n\r\n  useEffect(() => {\r\n    socket?.on('onlineList', (data: number[]) => {\r\n      setOnlineList(data);\r\n    });\r\n    console.log('socket on dm', socket?.hasListeners('dm'), socket);\r\n    return () => {\r\n      console.log('socket off dm', socket?.hasListeners('dm'));\r\n      socket?.off('onlineList');\r\n    };\r\n  }, [socket]);\r\n\r\n  return (\r\n    <>\r\n      <h2>\r\n        <CollapseButton collapse={channelCollapse} onClick={toggleChannelCollapse}>\r\n          <i\r\n            className=\"c-icon p-channel_sidebar__section_heading_expand p-channel_sidebar__section_heading_expand--show_more_feature c-icon--caret-right c-icon--inherit c-icon--inline\"\r\n            data-qa=\"channel-section-collapse\"\r\n            aria-hidden=\"true\"\r\n          />\r\n        </CollapseButton>\r\n        <span>Direct Messages</span>\r\n      </h2>\r\n      <div>\r\n        {!channelCollapse &&\r\n          memberData?.map((member) => {\r\n            const isOnline = onlineList.includes(member.id);\r\n            return <EachDM key={member.id} member={member} isOnline={isOnline} />;\r\n          })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DMList;\r\n","import { IChannel, IUser } from '@typings/db';\r\nimport fetcher from '@utils/fetcher';\r\nimport React, { useEffect, VFC } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { NavLink, useLocation } from 'react-router-dom';\r\nimport useSWR from 'swr';\r\n\r\ninterface Props {\r\n  channel: IChannel;\r\n}\r\nconst EachChannel: VFC<Props> = ({ channel }) => {\r\n  const { workspace } = useParams<{ workspace?: string }>();\r\n  const location = useLocation();\r\n  const { data: userData } = useSWR<IUser>('/api/users', fetcher, {\r\n    dedupingInterval: 2000, // 2초\r\n  });\r\n  const date = localStorage.getItem(`${workspace}-${channel.name}`) || 0;\r\n  const { data: count, mutate } = useSWR<number>(\r\n    userData ? `/api/workspaces/${workspace}/channels/${channel.name}/unreads?after=${date}` : null,\r\n    fetcher,\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (location.pathname === `/workspace/${workspace}/channel/${channel.name}`) {\r\n      mutate(0);\r\n    }\r\n  }, [mutate, location.pathname, workspace, channel]);\r\n\r\n  return (\r\n    <NavLink key={channel.name} activeClassName=\"selected\" to={`/workspace/${workspace}/channel/${channel.name}`}>\r\n      <span className={count !== undefined && count > 0 ? 'bold' : undefined}># {channel.name}</span>\r\n      {count !== undefined && count > 0 && <span className=\"count\">{count}</span>}\r\n    </NavLink>\r\n  );\r\n};\r\n\r\nexport default EachChannel;\r\n","import { CollapseButton } from '@components/DMList/styles';\r\nimport EachChannel from '@components/EachChannel';\r\nimport { IChannel, IUser } from '@typings/db';\r\nimport fetcher from '@utils/fetcher';\r\nimport React, { FC, useCallback, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport useSWR from 'swr';\r\n\r\ninterface Props {\r\n  channelData?: IChannel[];\r\n  userData?: IUser;\r\n}\r\n\r\nconst ChannelList: FC<Props> = () => {\r\n  const { workspace } = useParams<{ workspace?: string }>();\r\n  const [channelCollapse, setChannelCollapse] = useState(false);\r\n  const { data: userData } = useSWR<IUser>('/api/users', fetcher, {\r\n    dedupingInterval: 2000, // 2초\r\n  });\r\n  const { data: channelData } = useSWR<IChannel[]>(userData ? `/api/workspaces/${workspace}/channels` : null, fetcher);\r\n\r\n  const toggleChannelCollapse = useCallback(() => {\r\n    setChannelCollapse((prev) => !prev);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h2>\r\n        <CollapseButton collapse={channelCollapse} onClick={toggleChannelCollapse}>\r\n          <i\r\n            className=\"c-icon p-channel_sidebar__section_heading_expand p-channel_sidebar__section_heading_expand--show_more_feature c-icon--caret-right c-icon--inherit c-icon--inline\"\r\n            data-qa=\"channel-section-collapse\"\r\n            aria-hidden=\"true\"\r\n          />\r\n        </CollapseButton>\r\n        <span>Channels</span>\r\n      </h2>\r\n      <div>\r\n        {!channelCollapse &&\r\n          channelData?.map((channel) => {\r\n            return <EachChannel key={channel.id} channel={channel} />;\r\n          })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChannelList;\r\n","import Modal from '@components/Modal';\r\nimport useInput from '@hooks/useInput';\r\nimport { Button, Input, Label } from '@pages/SignUp/styles';\r\nimport { IUser } from '@typings/db';\r\nimport fetcher from '@utils/fetcher';\r\nimport axios from 'axios';\r\nimport React, { FC, useCallback } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { toast } from 'react-toastify';\r\nimport useSWR from 'swr';\r\n\r\ninterface Props {\r\n  show: boolean;\r\n  onCloseModal: () => void;\r\n  setShowInviteChannelModal: (flag: boolean) => void;\r\n}\r\nconst InviteChannelModal: FC<Props> = ({ show, onCloseModal, setShowInviteChannelModal }) => {\r\n  const { workspace, channel } = useParams<{ workspace: string; channel: string }>();\r\n  const [newMember, onChangeNewMember, setNewMember] = useInput('');\r\n  const { data: userData } = useSWR<IUser>('/api/users', fetcher);\r\n  const { mutate: revalidateMembers } = useSWR<IUser[]>(\r\n    userData ? `/api/workspaces/${workspace}/channel/${channel}/members` : null,\r\n    fetcher,\r\n  );\r\n\r\n  const onInviteMember = useCallback(\r\n    (e: any) => {\r\n      e.preventDefault();\r\n      if (!newMember || !newMember.trim()) {\r\n        return;\r\n      }\r\n      axios\r\n        .post(`/api/workspaces/${workspace}/channels/${channel}/members`, {\r\n          email: newMember,\r\n        })\r\n        .then(() => {\r\n          revalidateMembers();\r\n          setShowInviteChannelModal(false);\r\n          setNewMember('');\r\n        })\r\n        .catch((error) => {\r\n          console.dir(error);\r\n          toast.error(error.response?.data, { position: 'bottom-center' });\r\n        });\r\n    },\r\n    [channel, newMember, revalidateMembers, setNewMember, setShowInviteChannelModal, workspace],\r\n  );\r\n\r\n  return (\r\n    <Modal show={show} onCloseModal={onCloseModal}>\r\n      <form onSubmit={onInviteMember}>\r\n        <Label id=\"member-label\">\r\n          <span>채널 멤버 초대</span>\r\n          <Input id=\"member\" value={newMember} onChange={onChangeNewMember} />\r\n        </Label>\r\n        <Button type=\"submit\">초대하기</Button>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default InviteChannelModal;\r\n","import Modal from '@components/Modal';\r\nimport useInput from '@hooks/useInput';\r\nimport { Button, Input, Label } from '@pages/SignUp/styles';\r\nimport { IUser } from '@typings/db';\r\nimport fetcher from '@utils/fetcher';\r\nimport axios from 'axios';\r\nimport React, { FC, useCallback } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { toast } from 'react-toastify';\r\nimport useSWR from 'swr';\r\n\r\ninterface Props {\r\n  show: boolean;\r\n  onCloseModal: () => void;\r\n  setShowInviteWorkspaceModal: (flag: boolean) => void;\r\n}\r\nconst InviteWorkspaceModal: FC<Props> = ({ show, onCloseModal, setShowInviteWorkspaceModal }) => {\r\n  const { workspace } = useParams<{ workspace: string; channel: string }>();\r\n  const [newMember, onChangeNewMember, setNewMember] = useInput('');\r\n  const { data: userData } = useSWR<IUser>('/api/users', fetcher);\r\n  const { mutate: revalidateMember } = useSWR<IUser[]>(\r\n    userData ? `/api/workspaces/${workspace}/members` : null,\r\n    fetcher,\r\n  );\r\n\r\n  const onInviteMember = useCallback(\r\n    (e: any) => {\r\n      e.preventDefault();\r\n      if (!newMember || !newMember.trim()) {\r\n        return;\r\n      }\r\n      axios\r\n        .post(`/api/workspaces/${workspace}/members`, {\r\n          email: newMember,\r\n        })\r\n        .then(() => {\r\n          revalidateMember();\r\n          setShowInviteWorkspaceModal(false);\r\n          setNewMember('');\r\n        })\r\n        .catch((error) => {\r\n          console.dir(error);\r\n          toast.error(error.response?.data, { position: 'bottom-center' });\r\n        });\r\n    },\r\n    [newMember, workspace, revalidateMember, setShowInviteWorkspaceModal, setNewMember],\r\n  );\r\n\r\n  return (\r\n    <Modal show={show} onCloseModal={onCloseModal}>\r\n      <form onSubmit={onInviteMember}>\r\n        <Label id=\"member-label\">\r\n          <span>이메일</span>\r\n          <Input id=\"member\" type=\"email\" value={newMember} onChange={onChangeNewMember} />\r\n        </Label>\r\n        <Button type=\"submit\">초대하기</Button>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default InviteWorkspaceModal;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const CreateMenu = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  z-index: 1000;\r\n\r\n  & > div {\r\n    position: absolute;\r\n    display: inline-block;\r\n    --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\r\n    box-shadow: 0 0 0 1px var(--saf-0), 0 4px 12px 0 rgba(0, 0, 0, 0.12);\r\n    background-color: rgba(var(--sk_foreground_min_solid, 248, 248, 248), 1);\r\n    border-radius: 6px;\r\n    user-select: none;\r\n    min-width: 360px;\r\n    z-index: 512;\r\n    max-height: calc(100vh - 20px);\r\n    color: rgb(29, 28, 29);\r\n  }\r\n`;\r\n\r\nexport const CloseModalButton = styled.button`\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 6px;\r\n  background: transparent;\r\n  border: none;\r\n  font-size: 30px;\r\n  cursor: pointer;\r\n`;\r\n","import { CreateMenu, CloseModalButton } from '@components/Menu/styles';\r\nimport React, { CSSProperties, FC, PropsWithChildren, useCallback } from 'react';\r\n\r\ninterface Props {\r\n  show: boolean;\r\n  onCloseModal: () => void;\r\n  style: CSSProperties;\r\n  closeButton?: boolean;\r\n}\r\n\r\nconst Menu: FC<PropsWithChildren<Props>> = ({ closeButton, style, show, children, onCloseModal }) => {\r\n  const stopPropagation = useCallback((e: any) => {\r\n    e.stopPropagation();\r\n  }, []);\r\n\r\n  if (!show) {\r\n    return null;\r\n  }\r\n  return (\r\n    <CreateMenu onClick={onCloseModal}>\r\n      <div onClick={stopPropagation} style={style}>\r\n        {closeButton && <CloseModalButton onClick={onCloseModal}>&times;</CloseModalButton>}\r\n        {children}\r\n      </div>\r\n    </CreateMenu>\r\n  );\r\n};\r\nMenu.defaultProps = {\r\n  closeButton: true,\r\n};\r\n\r\nexport default Menu;\r\n","import styled from '@emotion/styled';\r\nimport { MentionsInput } from 'react-mentions';\r\n\r\nexport const ChatArea = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  padding: 20px;\r\n  padding-top: 0;\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  color: rgb(29, 28, 29);\r\n  font-size: 15px;\r\n  width: 100%;\r\n  border-radius: 4px;\r\n  border: 1px solid rgb(29, 28, 29);\r\n`;\r\n\r\nexport const MentionsTextarea = styled(MentionsInput)`\r\n  font-family: Slack-Lato, appleLogo, sans-serif;\r\n  font-size: 15px;\r\n  padding: 8px 9px;\r\n  width: 100%;\r\n  & strong {\r\n    background: skyblue;\r\n  }\r\n\r\n  & textarea {\r\n    height: 44px;\r\n    padding: 9px 10px !important;\r\n    outline: none !important;\r\n    border-radius: 4px !important;\r\n    resize: none !important;\r\n    line-height: 22px;\r\n    border: none;\r\n  }\r\n\r\n  & ul {\r\n    border: 1px solid lightgray;\r\n    max-height: 200px;\r\n    overflow-y: auto;\r\n    padding: 9px 10px;\r\n    background: white;\r\n    border-radius: 4px;\r\n    width: 150px;\r\n  }\r\n`;\r\n\r\nexport const Toolbox = styled.div`\r\n  position: relative;\r\n  background: rgb(248, 248, 248);\r\n  height: 41px;\r\n  display: flex;\r\n  border-top: 1px solid rgb(221, 221, 221);\r\n  align-items: center;\r\n  border-bottom-left-radius: 4px;\r\n  border-bottom-right-radius: 4px;\r\n`;\r\n\r\nexport const SendButton = styled.button`\r\n  position: absolute;\r\n  right: 5px;\r\n  top: 5px;\r\n`;\r\n\r\nexport const EachMention = styled.button<{ focus: boolean }>`\r\n  padding: 4px 20px;\r\n  background: transparent;\r\n  border: none;\r\n  display: flex;\r\n  align-items: center;\r\n  color: rgb(28, 29, 28);\r\n  width: 100%;\r\n\r\n  & img {\r\n    margin-right: 5px;\r\n  }\r\n\r\n  ${({ focus }) =>\r\n    focus &&\r\n    `\r\n    background: #1264a3;\r\n    color: white;\r\n  `};\r\n`;\r\n","import { ChatArea, Form, MentionsTextarea, SendButton, Toolbox, EachMention } from '@components/ChatBox/styles';\r\nimport { IUser } from '@typings/db';\r\nimport autosize from 'autosize';\r\nimport gravatar from 'gravatar';\r\nimport React, { FC, useCallback, useEffect, useRef } from 'react';\r\nimport { Mention, SuggestionDataItem } from 'react-mentions';\r\n\r\ninterface Props {\r\n  onSubmitForm: (e: any) => void;\r\n  chat?: string;\r\n  onChangeChat: (e: any) => void;\r\n  placeholder: string;\r\n  data?: IUser[];\r\n}\r\nconst ChatBox: FC<Props> = ({ onSubmitForm, chat, onChangeChat, placeholder, data }) => {\r\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\r\n  useEffect(() => {\r\n    if (textareaRef.current) {\r\n      autosize(textareaRef.current);\r\n    }\r\n  }, []);\r\n\r\n  const onKeydownChat = useCallback(\r\n    (e: any) => {\r\n      if (e.key === 'Enter') {\r\n        if (!e.shiftKey) {\r\n          e.preventDefault();\r\n          onSubmitForm(e);\r\n        }\r\n      }\r\n    },\r\n    [onSubmitForm],\r\n  );\r\n\r\n  const renderUserSuggestion: (\r\n    suggestion: SuggestionDataItem,\r\n    search: string,\r\n    highlightedDisplay: React.ReactNode,\r\n    index: number,\r\n    focused: boolean,\r\n  ) => React.ReactNode = useCallback(\r\n    (member, search, highlightedDisplay, index, focus) => {\r\n      if (!data) {\r\n        return null;\r\n      }\r\n      return (\r\n        <EachMention focus={focus}>\r\n          <img src={gravatar.url(data[index].email, { s: '20px', d: 'retro' })} alt={data[index].nickname} />\r\n          <span>{highlightedDisplay}</span>\r\n        </EachMention>\r\n      );\r\n    },\r\n    [data],\r\n  );\r\n\r\n  return (\r\n    <ChatArea>\r\n      <Form onSubmit={onSubmitForm}>\r\n        <MentionsTextarea\r\n          id=\"editor-chat\"\r\n          value={chat}\r\n          onChange={onChangeChat}\r\n          onKeyPress={onKeydownChat}\r\n          placeholder={placeholder}\r\n          inputRef={textareaRef}\r\n          allowSuggestionsAboveCursor\r\n        >\r\n          <Mention\r\n            appendSpaceOnAdd\r\n            trigger=\"@\"\r\n            data={data?.map((v) => ({ id: v.id, display: v.nickname })) || []}\r\n            renderSuggestion={renderUserSuggestion}\r\n          />\r\n        </MentionsTextarea>\r\n        <Toolbox>\r\n          <SendButton\r\n            className={\r\n              'c-button-unstyled c-icon_button c-icon_button--light c-icon_button--size_medium c-texty_input__button c-texty_input__button--send' +\r\n              (chat?.trim() ? '' : ' c-texty_input__button--disabled')\r\n            }\r\n            data-qa=\"texty_send_button\"\r\n            aria-label=\"Send message\"\r\n            data-sk=\"tooltip_parent\"\r\n            type=\"submit\"\r\n            disabled={!chat?.trim()}\r\n          >\r\n            <i className=\"c-icon c-icon--paperplane-filled\" aria-hidden=\"true\" />\r\n          </SendButton>\r\n        </Toolbox>\r\n      </Form>\r\n    </ChatArea>\r\n  );\r\n};\r\n\r\nexport default ChatBox;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const ChatWrapper = styled.div`\r\n  display: flex;\r\n  padding: 8px 20px;\r\n\r\n  &:hover {\r\n    background: #eee;\r\n  }\r\n\r\n  & .chat-img {\r\n    display: flex;\r\n    width: 36px;\r\n    margin-right: 8px;\r\n\r\n    & img {\r\n      width: 36px;\r\n      height: 36px;\r\n    }\r\n  }\r\n\r\n  & .chat-text {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    flex: 1;\r\n\r\n    & p {\r\n      flex: 0 0 100%;\r\n      margin: 0;\r\n    }\r\n  }\r\n\r\n  & .chat-user {\r\n    display: flex;\r\n    flex: 0 0 100%;\r\n    align-items: center;\r\n\r\n    & > b {\r\n      margin-right: 5px;\r\n    }\r\n\r\n    & > span {\r\n      font-size: 12px;\r\n    }\r\n  }\r\n\r\n  & a {\r\n    text-decoration: none;\r\n    color: deepskyblue;\r\n  }\r\n`;\r\n","import React, { FC, memo, useMemo } from 'react';\r\nimport { ChatWrapper } from './styles';\r\nimport gravatar from 'gravatar';\r\nimport { IChat, IDM, IUser } from '@typings/db';\r\nimport dayjs from 'dayjs';\r\nimport regexifyString from 'regexify-string';\r\nimport { Link, useParams } from 'react-router-dom';\r\n\r\ninterface Props {\r\n  data: IDM | IChat;\r\n}\r\n\r\nconst Chat: FC<Props> = ({ data }) => {\r\n  const params = useParams<{ workspace?: string }>();\r\n  const { workspace } = params;\r\n  const user: IUser = 'Sender' in data ? data.Sender : data.User;\r\n\r\n  const result = useMemo(\r\n    () =>\r\n      regexifyString({\r\n        input: data.content,\r\n        pattern: /@\\[(.+?)]\\((\\d+?)\\)|\\n/g,\r\n        decorator(match, index) {\r\n          const arr: string[] | null = match.match(/@\\[(.+?)]\\((\\d+?)\\)|\\n/!);\r\n          if (arr) {\r\n            return (\r\n              <Link key={match + index} to={`/workspace/${workspace}/dm/${arr[2]}`}>\r\n                @{arr[1]}\r\n              </Link>\r\n            );\r\n          }\r\n          return <br key={index} />;\r\n        },\r\n      }),\r\n    [data.content],\r\n  );\r\n\r\n  return (\r\n    <ChatWrapper>\r\n      <div className=\"chat-img\">\r\n        <img src={gravatar.url(user.email, { s: '36px', d: 'retro' })} alt={user.nickname} />\r\n      </div>\r\n      <div className=\"chat-text\">\r\n        <div className=\"chat-user\">\r\n          <b>{user.nickname}</b>\r\n          <span>{dayjs(data.createdAt).toString()}</span>\r\n        </div>\r\n        <p>{result}</p>\r\n      </div>\r\n    </ChatWrapper>\r\n  );\r\n};\r\n\r\nexport default memo(Chat);\r\n","import styled from '@emotion/styled';\r\n\r\nexport const ChatZone = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex: 1;\r\n`;\r\n\r\nexport const Section = styled.section`\r\n  margin-top: 20px;\r\n  border-top: 1px solid #eee;\r\n`;\r\n\r\nexport const StickyHeader = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex: 1;\r\n  width: 100%;\r\n  position: sticky;\r\n  top: 14px;\r\n\r\n  & button {\r\n    font-weight: bold;\r\n    font-size: 13px;\r\n    height: 28px;\r\n    line-height: 27px;\r\n    padding: 0 16px;\r\n    z-index: 2;\r\n    --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\r\n    box-shadow: 0 0 0 1px var(--saf-0), 0 1px 3px 0 rgba(0, 0, 0, 0.08);\r\n    border-radius: 24px;\r\n    position: relative;\r\n    top: -13px;\r\n    background: white;\r\n    border: none;\r\n    outline: none;\r\n  }\r\n`;\r\n","import Chat from '@components/Chat';\r\nimport { ChatZone, Section, StickyHeader } from '@components/ChatList/styles';\r\nimport { IChat, IDM } from '@typings/db';\r\nimport React, { FC, RefObject, useCallback } from 'react';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\ninterface Props {\r\n  scrollbarRef: RefObject<Scrollbars>;\r\n  isReachingEnd?: boolean;\r\n  isEmpty: boolean;\r\n  chatSections: { [key: string]: (IDM | IChat)[] };\r\n  setSize: (f: (size: number) => number) => Promise<(IDM | IChat)[][] | undefined>;\r\n}\r\nconst ChatList: FC<Props> = ({ scrollbarRef, isReachingEnd, isEmpty, chatSections, setSize }) => {\r\n  const onScroll = useCallback(\r\n    (values: any) => {\r\n      if (values.scrollTop === 0 && !isReachingEnd && !isEmpty) {\r\n        setSize((size) => size + 1).then(() => {\r\n          scrollbarRef.current?.scrollTop(scrollbarRef.current?.getScrollHeight() - values.scrollHeight);\r\n        });\r\n      }\r\n    },\r\n    [setSize, scrollbarRef, isReachingEnd, isEmpty],\r\n  );\r\n\r\n  return (\r\n    <ChatZone>\r\n      <Scrollbars autoHide ref={scrollbarRef} onScrollFrame={onScroll}>\r\n        {Object.entries(chatSections).map(([date, chats]) => {\r\n          return (\r\n            <Section className={`section-${date}`} key={date}>\r\n              <StickyHeader>\r\n                <button>{date}</button>\r\n              </StickyHeader>\r\n              {chats.map((chat) => (\r\n                <Chat key={chat.id} data={chat} />\r\n              ))}\r\n            </Section>\r\n          );\r\n        })}\r\n      </Scrollbars>\r\n    </ChatZone>\r\n  );\r\n};\r\n\r\nexport default ChatList;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  height: calc(100vh - 38px);\r\n  flex-flow: column;\r\n  position: relative;\r\n`;\r\n\r\nexport const Header = styled.header`\r\n  height: 64px;\r\n  display: flex;\r\n  width: 100%;\r\n  --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\r\n  box-shadow: 0 1px 0 var(--saf-0);\r\n  padding: 20px 16px 20px 20px;\r\n  font-weight: bold;\r\n  align-items: center;\r\n`;\r\n\r\nexport const DragOver = styled.div`\r\n  position: absolute;\r\n  top: 64px;\r\n  left: 0;\r\n  width: 100%;\r\n  height: calc(100% - 64px);\r\n  background: white;\r\n  opacity: 0.7;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 40px;\r\n`;\r\n","import { IChat, IDM } from '@typings/db';\r\nimport dayjs from 'dayjs';\r\n\r\nexport default function makeSection<T extends IDM | IChat>(chatList: T[]) {\r\n  const sections: { [key: string]: T[] } = {};\r\n  chatList.forEach((chat) => {\r\n    const monthDate = dayjs(chat.createdAt).format('YYYY-MM-DD');\r\n    if (Array.isArray(sections[monthDate])) {\r\n      sections[monthDate].push(chat);\r\n    } else {\r\n      sections[monthDate] = [chat];\r\n    }\r\n  });\r\n  return sections;\r\n}\r\n","import ChatBox from '@components/ChatBox';\r\nimport ChatList from '@components/ChatList';\r\nimport InviteChannelModal from '@components/InviteChannelModal';\r\nimport useInput from '@hooks/useInput';\r\nimport useSocket from '@hooks/useSocket';\r\nimport { Header, Container, DragOver } from '@pages/Channel/styles';\r\nimport { IChannel, IChat, IUser } from '@typings/db';\r\nimport fetcher from '@utils/fetcher';\r\nimport makeSection from '@utils/makeSection';\r\nimport axios from 'axios';\r\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport { useParams } from 'react-router';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport useSWR from 'swr';\r\nimport useSWRInfinite from 'swr/infinite';\r\n\r\nconst PAGE_SIZE = 20;\r\nconst Channel = () => {\r\n  const { workspace, channel } = useParams<{ workspace: string; channel: string }>();\r\n  const [socket] = useSocket(workspace);\r\n  const { data: userData } = useSWR<IUser>('/api/users', fetcher);\r\n  const { data: channelsData } = useSWR<IChannel[]>(`/api/workspaces/${workspace}/channels`, fetcher);\r\n  const channelData = channelsData?.find((v) => v.name === channel);\r\n  const {\r\n    data: chatData,\r\n    mutate: mutateChat,\r\n    setSize,\r\n  } = useSWRInfinite<IChat[]>(\r\n    (index) => `/api/workspaces/${workspace}/channels/${channel}/chats?perPage=${PAGE_SIZE}&page=${index + 1}`,\r\n    fetcher,\r\n    {\r\n      onSuccess(data) {\r\n        if (data?.length === 1) {\r\n          setTimeout(() => {\r\n            scrollbarRef.current?.scrollToBottom();\r\n          }, 100);\r\n        }\r\n      },\r\n    },\r\n  );\r\n  const { data: channelMembersData } = useSWR<IUser[]>(\r\n    userData ? `/api/workspaces/${workspace}/channels/${channel}/members` : null,\r\n    fetcher,\r\n  );\r\n  const [chat, onChangeChat, setChat] = useInput('');\r\n  const [showInviteChannelModal, setShowInviteChannelModal] = useState(false);\r\n  const scrollbarRef = useRef<Scrollbars>(null);\r\n  const [dragOver, setDragOver] = useState(false);\r\n\r\n  const isEmpty = chatData?.[0]?.length === 0;\r\n  const isReachingEnd = isEmpty || (chatData && chatData[chatData.length - 1]?.length < PAGE_SIZE);\r\n\r\n  const onCloseModal = useCallback(() => {\r\n    setShowInviteChannelModal(false);\r\n  }, []);\r\n\r\n  const onSubmitForm = useCallback(\r\n    (e: any) => {\r\n      e.preventDefault();\r\n      if (chat?.trim() && chatData && channelData && userData) {\r\n        const savedChat = chat;\r\n        mutateChat((prevChatData) => {\r\n          prevChatData?.[0].unshift({\r\n            id: (chatData[0][0]?.id || 0) + 1,\r\n            content: savedChat,\r\n            UserId: userData.id,\r\n            User: userData,\r\n            createdAt: new Date(),\r\n            ChannelId: channelData.id,\r\n            Channel: channelData,\r\n          });\r\n          return prevChatData;\r\n        }, false).then(() => {\r\n          localStorage.setItem(`${workspace}-${channel}`, new Date().getTime().toString());\r\n          setChat('');\r\n          if (scrollbarRef.current) {\r\n            console.log('scrollToBottom!', scrollbarRef.current?.getValues());\r\n            scrollbarRef.current.scrollToBottom();\r\n          }\r\n        });\r\n        axios\r\n          .post(`/api/workspaces/${workspace}/channels/${channel}/chats`, {\r\n            content: savedChat,\r\n          })\r\n          .catch(console.error);\r\n      }\r\n    },\r\n    [chat, workspace, channel, channelData, userData, chatData, mutateChat, setChat],\r\n  );\r\n\r\n  const onMessage = useCallback(\r\n    (data: IChat) => {\r\n      if (\r\n        data.Channel.name === channel &&\r\n        (data.content.startsWith('uploads\\\\') || data.content.startsWith('uploads/') || data.UserId !== userData?.id)\r\n      ) {\r\n        mutateChat((chatData) => {\r\n          chatData?.[0].unshift(data);\r\n          return chatData;\r\n        }, false).then(() => {\r\n          if (scrollbarRef.current) {\r\n            if (\r\n              scrollbarRef.current.getScrollHeight() <\r\n              scrollbarRef.current.getClientHeight() + scrollbarRef.current.getScrollTop() + 150\r\n            ) {\r\n              console.log('scrollToBottom!', scrollbarRef.current?.getValues());\r\n              setTimeout(() => {\r\n                scrollbarRef.current?.scrollToBottom();\r\n              }, 100);\r\n            } else {\r\n              toast.success('새 메시지가 도착했습니다.', {\r\n                onClick() {\r\n                  scrollbarRef.current?.scrollToBottom();\r\n                },\r\n                closeOnClick: true,\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    },\r\n    [channel, userData, mutateChat],\r\n  );\r\n\r\n  useEffect(() => {\r\n    socket?.on('message', onMessage);\r\n    return () => {\r\n      socket?.off('message', onMessage);\r\n    };\r\n  }, [socket, onMessage]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(`${workspace}-${channel}`, new Date().getTime().toString());\r\n  }, [workspace, channel]);\r\n\r\n  const onClickInviteChannel = useCallback(() => {\r\n    setShowInviteChannelModal(true);\r\n  }, []);\r\n\r\n  const onDrop = useCallback(\r\n    (e: any) => {\r\n      e.preventDefault();\r\n      console.log(e);\r\n      const formData = new FormData();\r\n      if (e.dataTransfer.items) {\r\n        // Use DataTransferItemList interface to access the file(s)\r\n        for (let i = 0; i < e.dataTransfer.items.length; i++) {\r\n          // If dropped items aren't files, reject them\r\n          console.log(e.dataTransfer.items[i]);\r\n          if (e.dataTransfer.items[i].kind === 'file') {\r\n            const file = e.dataTransfer.items[i].getAsFile();\r\n            console.log(e, '.... file[' + i + '].name = ' + file.name);\r\n            formData.append('image', file);\r\n          }\r\n        }\r\n      } else {\r\n        // Use DataTransfer interface to access the file(s)\r\n        for (let i = 0; i < e.dataTransfer.files.length; i++) {\r\n          console.log(e, '... file[' + i + '].name = ' + e.dataTransfer.files[i].name);\r\n          formData.append('image', e.dataTransfer.files[i]);\r\n        }\r\n      }\r\n      axios.post(`/api/workspaces/${workspace}/channels/${channel}/images`, formData).then(() => {\r\n        setDragOver(false);\r\n        localStorage.setItem(`${workspace}-${channel}`, new Date().getTime().toString());\r\n      });\r\n    },\r\n    [workspace, channel],\r\n  );\r\n\r\n  const onDragOver = useCallback((e: any) => {\r\n    e.preventDefault();\r\n    console.log(e);\r\n    setDragOver(true);\r\n  }, []);\r\n\r\n  if (channelsData && !channelData) {\r\n    return <Redirect to={`/workspace/${workspace}/channel/일반`} />;\r\n  }\r\n\r\n  const chatSections = makeSection(chatData ? ([] as IChat[]).concat(...chatData).reverse() : []);\r\n\r\n  return (\r\n    <Container onDrop={onDrop} onDragOver={onDragOver}>\r\n      <Header>\r\n        <span>#{channel}</span>\r\n        <div style={{ display: 'flex', flex: 1, justifyContent: 'flex-end', alignItems: 'center' }}>\r\n          <span>{channelMembersData?.length}</span>\r\n          <button\r\n            onClick={onClickInviteChannel}\r\n            className=\"c-button-unstyled p-ia__view_header__button\"\r\n            aria-label=\"Add people to #react-native\"\r\n            data-sk=\"tooltip_parent\"\r\n            type=\"button\"\r\n          >\r\n            <i className=\"c-icon p-ia__view_header__button_icon c-icon--add-user\" aria-hidden=\"true\" />\r\n          </button>\r\n        </div>\r\n      </Header>\r\n      <ChatList\r\n        scrollbarRef={scrollbarRef}\r\n        isReachingEnd={isReachingEnd}\r\n        isEmpty={isEmpty}\r\n        chatSections={chatSections}\r\n        setSize={setSize}\r\n      />\r\n      <ChatBox\r\n        onSubmitForm={onSubmitForm}\r\n        chat={chat}\r\n        onChangeChat={onChangeChat}\r\n        placeholder={`Message #${channel}`}\r\n        data={channelMembersData}\r\n      />\r\n      <InviteChannelModal\r\n        show={showInviteChannelModal}\r\n        onCloseModal={onCloseModal}\r\n        setShowInviteChannelModal={setShowInviteChannelModal}\r\n      />\r\n      <ToastContainer position=\"bottom-center\" />\r\n      {dragOver && <DragOver>업로드!</DragOver>}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Channel;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  height: calc(100vh - 38px);\r\n  flex-flow: column;\r\n  position: relative;\r\n`;\r\n\r\nexport const Header = styled.header`\r\n  height: 64px;\r\n  display: flex;\r\n  width: 100%;\r\n  --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\r\n  box-shadow: 0 1px 0 var(--saf-0);\r\n  padding: 20px 16px 20px 20px;\r\n  font-weight: bold;\r\n  align-items: center;\r\n\r\n  & img {\r\n    margin-right: 5px;\r\n  }\r\n`;\r\n","import ChatBox from '@components/ChatBox';\r\nimport ChatList from '@components/ChatList';\r\nimport useInput from '@hooks/useInput';\r\nimport useSocket from '@hooks/useSocket';\r\nimport { DragOver } from '@pages/Channel/styles';\r\nimport { Header, Container } from '@pages/DirectMessage/styles';\r\nimport { IDM } from '@typings/db';\r\nimport fetcher from '@utils/fetcher';\r\nimport makeSection from '@utils/makeSection';\r\nimport axios from 'axios';\r\nimport gravatar from 'gravatar';\r\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport { useParams } from 'react-router';\r\nimport { toast } from 'react-toastify';\r\nimport useSWR from 'swr';\r\nimport useSWRInfinite from 'swr/infinite';\r\n\r\nconst PAGE_SIZE = 20;\r\nconst DirectMessage = () => {\r\n  const { workspace, id } = useParams<{ workspace: string; id: string }>();\r\n  const [socket] = useSocket(workspace);\r\n  const { data: myData } = useSWR('/api/users', fetcher);\r\n  const { data: userData } = useSWR(`/api/workspaces/${workspace}/users/${id}`, fetcher);\r\n  const {\r\n    data: chatData,\r\n    mutate: mutateChat,\r\n    setSize,\r\n  } = useSWRInfinite<IDM[]>(\r\n    (index) => `/api/workspaces/${workspace}/dms/${id}/chats?perPage=${PAGE_SIZE}&page=${index + 1}`,\r\n    fetcher,\r\n    {\r\n      onSuccess(data) {\r\n        if (data?.length === 1) {\r\n          setTimeout(() => {\r\n            scrollbarRef.current?.scrollToBottom();\r\n          }, 100);\r\n        }\r\n      },\r\n    },\r\n  );\r\n  const [chat, onChangeChat, setChat] = useInput('');\r\n  const scrollbarRef = useRef<Scrollbars>(null);\r\n  const [dragOver, setDragOver] = useState(false);\r\n\r\n  const isEmpty = chatData?.[0]?.length === 0;\r\n  const isReachingEnd = isEmpty || (chatData && chatData[chatData.length - 1]?.length < PAGE_SIZE);\r\n\r\n  const onSubmitForm = useCallback(\r\n    (e: any) => {\r\n      e.preventDefault();\r\n      if (chat?.trim() && chatData) {\r\n        const savedChat = chat;\r\n        mutateChat((prevChatData) => {\r\n          prevChatData?.[0].unshift({\r\n            id: (chatData[0][0]?.id || 0) + 1,\r\n            content: savedChat,\r\n            SenderId: myData.id,\r\n            Sender: myData,\r\n            ReceiverId: userData.id,\r\n            Receiver: userData,\r\n            createdAt: new Date(),\r\n          });\r\n          return prevChatData;\r\n        }, false).then(() => {\r\n          localStorage.setItem(`${workspace}-${id}`, new Date().getTime().toString());\r\n          setChat('');\r\n          if (scrollbarRef.current) {\r\n            console.log('scrollToBottom!', scrollbarRef.current?.getValues());\r\n            scrollbarRef.current.scrollToBottom();\r\n          }\r\n        });\r\n        axios\r\n          .post(`/api/workspaces/${workspace}/dms/${id}/chats`, {\r\n            content: chat,\r\n          })\r\n          .catch(console.error);\r\n      }\r\n    },\r\n    [chat, workspace, id, myData, userData, chatData, mutateChat, setChat],\r\n  );\r\n\r\n  const onMessage = useCallback(\r\n    (data: IDM) => {\r\n      if (data.SenderId === Number(id) && myData.id !== Number(id)) {\r\n        mutateChat((chatData) => {\r\n          chatData?.[0].unshift(data);\r\n          return chatData;\r\n        }, false).then(() => {\r\n          if (scrollbarRef.current) {\r\n            if (\r\n              scrollbarRef.current.getScrollHeight() <\r\n              scrollbarRef.current.getClientHeight() + scrollbarRef.current.getScrollTop() + 150\r\n            ) {\r\n              console.log('scrollToBottom!', scrollbarRef.current?.getValues());\r\n              setTimeout(() => {\r\n                scrollbarRef.current?.scrollToBottom();\r\n              }, 100);\r\n            } else {\r\n              toast.success('새 메시지가 도착했습니다.', {\r\n                onClick() {\r\n                  scrollbarRef.current?.scrollToBottom();\r\n                },\r\n                closeOnClick: true,\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    },\r\n    [id, myData, mutateChat],\r\n  );\r\n\r\n  useEffect(() => {\r\n    socket?.on('dm', onMessage);\r\n    return () => {\r\n      socket?.off('dm', onMessage);\r\n    };\r\n  }, [socket, onMessage]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(`${workspace}-${id}`, new Date().getTime().toString());\r\n  }, [workspace, id]);\r\n\r\n  const onDrop = useCallback(\r\n    (e: any) => {\r\n      e.preventDefault();\r\n      console.log(e);\r\n      const formData = new FormData();\r\n      if (e.dataTransfer.items) {\r\n        // Use DataTransferItemList interface to access the file(s)\r\n        for (let i = 0; i < e.dataTransfer.items.length; i++) {\r\n          // If dropped items aren't files, reject them\r\n          if (e.dataTransfer.items[i].kind === 'file') {\r\n            const file = e.dataTransfer.items[i].getAsFile();\r\n            console.log('... file[' + i + '].name = ' + file.name);\r\n            formData.append('image', file);\r\n          }\r\n        }\r\n      } else {\r\n        // Use DataTransfer interface to access the file(s)\r\n        for (let i = 0; i < e.dataTransfer.files.length; i++) {\r\n          console.log('... file[' + i + '].name = ' + e.dataTransfer.files[i].name);\r\n          formData.append('image', e.dataTransfer.files[i]);\r\n        }\r\n      }\r\n      axios.post(`/api/workspaces/${workspace}/dms/${id}/images`, formData).then(() => {\r\n        setDragOver(false);\r\n        localStorage.setItem(`${workspace}-${id}`, new Date().getTime().toString());\r\n        mutateChat();\r\n      });\r\n    },\r\n    [workspace, id, mutateChat],\r\n  );\r\n\r\n  const onDragOver = useCallback((e: any) => {\r\n    e.preventDefault();\r\n    console.log(e);\r\n    setDragOver(true);\r\n  }, []);\r\n\r\n  if (!userData || !myData) {\r\n    return null;\r\n  }\r\n\r\n  const chatSections = makeSection(chatData ? ([] as IDM[]).concat(...chatData).reverse() : []);\r\n\r\n  return (\r\n    <Container onDrop={onDrop} onDragOver={onDragOver}>\r\n      <Header>\r\n        <img src={gravatar.url(userData.email, { s: '24px', d: 'retro' })} alt={userData.nickname} />\r\n        <span>{userData.nickname}</span>\r\n      </Header>\r\n      <ChatList\r\n        scrollbarRef={scrollbarRef}\r\n        isReachingEnd={isReachingEnd}\r\n        isEmpty={isEmpty}\r\n        chatSections={chatSections}\r\n        setSize={setSize}\r\n      />\r\n      <ChatBox\r\n        onSubmitForm={onSubmitForm}\r\n        chat={chat}\r\n        onChangeChat={onChangeChat}\r\n        placeholder={`Message ${userData.nickname}`}\r\n        // data={[]}\r\n      />\r\n      {dragOver && <DragOver>업로드!</DragOver>}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default DirectMessage;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const RightMenu = styled.div`\r\n  float: right;\r\n`;\r\n\r\nexport const Header = styled.header`\r\n  height: 38px;\r\n  background: #350d36;\r\n  color: #ffffff;\r\n  box-shadow: 0 1px 0 0 rgba(255, 255, 255, 0.1);\r\n  padding: 5px;\r\n  text-align: center;\r\n`;\r\n\r\nexport const ProfileImg = styled.img`\r\n  width: 28px;\r\n  height: 28px;\r\n  position: absolute;\r\n  top: 5px;\r\n  right: 16px;\r\n`;\r\n\r\nexport const ProfileModal = styled.div`\r\n  display: flex;\r\n  padding: 20px;\r\n\r\n  & img {\r\n    display: flex;\r\n  }\r\n\r\n  & > div {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-left: 10px;\r\n  }\r\n\r\n  & #profile-name {\r\n    font-weight: bold;\r\n    display: inline-flex;\r\n  }\r\n\r\n  & #profile-active {\r\n    font-size: 13px;\r\n    display: inline-flex;\r\n  }\r\n`;\r\n\r\nexport const LogOutButton = styled.button`\r\n  border: none;\r\n  width: 100%;\r\n  border-top: 1px solid rgb(29, 28, 29);\r\n  background: transparent;\r\n  display: block;\r\n  height: 33px;\r\n  padding: 5px 20px 5px;\r\n  outline: none;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const WorkspaceWrapper = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n`;\r\n\r\nexport const Workspaces = styled.div`\r\n  width: 65px;\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background: #3f0e40;\r\n  border-top: 1px solid rgb(82, 38, 83);\r\n  border-right: 1px solid rgb(82, 38, 83);\r\n  vertical-align: top;\r\n  text-align: center;\r\n  padding: 15px 0 0;\r\n`;\r\n\r\nexport const Channels = styled.nav`\r\n  width: 260px;\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  background: #3f0e40;\r\n  color: rgb(188, 171, 188);\r\n  vertical-align: top;\r\n\r\n  & a {\r\n    padding-left: 36px;\r\n    color: inherit;\r\n    text-decoration: none;\r\n    height: 28px;\r\n    line-height: 28px;\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    &.selected {\r\n      color: white;\r\n    }\r\n  }\r\n\r\n  & .bold {\r\n    color: white;\r\n    font-weight: bold;\r\n  }\r\n\r\n  & .count {\r\n    margin-left: auto;\r\n    background: #cd2553;\r\n    border-radius: 16px;\r\n    display: inline-block;\r\n    font-size: 12px;\r\n    font-weight: 700;\r\n    height: 18px;\r\n    line-height: 18px;\r\n    padding: 0 9px;\r\n    color: white;\r\n    margin-right: 16px;\r\n  }\r\n\r\n  & h2 {\r\n    height: 36px;\r\n    line-height: 36px;\r\n    margin: 0;\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    font-size: 15px;\r\n  }\r\n`;\r\n\r\nexport const WorkspaceName = styled.button`\r\n  height: 64px;\r\n  line-height: 64px;\r\n  border: none;\r\n  width: 100%;\r\n  text-align: left;\r\n  border-top: 1px solid rgb(82, 38, 83);\r\n  border-bottom: 1px solid rgb(82, 38, 83);\r\n  font-weight: 900;\r\n  font-size: 24px;\r\n  background: transparent;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  padding: 0;\r\n  padding-left: 16px;\r\n  margin: 0;\r\n  color: white;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const MenuScroll = styled.div`\r\n  height: calc(100vh - 102px);\r\n  overflow-y: auto;\r\n`;\r\n\r\nexport const WorkspaceModal = styled.div`\r\n  padding: 10px 0 0;\r\n\r\n  & h2 {\r\n    padding-left: 20px;\r\n  }\r\n\r\n  & > button {\r\n    width: 100%;\r\n    height: 28px;\r\n    padding: 4px;\r\n    border: none;\r\n    background: transparent;\r\n    border-top: 1px solid rgb(28, 29, 28);\r\n    cursor: pointer;\r\n\r\n    &:last-of-type {\r\n      border-bottom: 1px solid rgb(28, 29, 28);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Chats = styled.div`\r\n  flex: 1;\r\n`;\r\n\r\nexport const AddButton = styled.button`\r\n  color: white;\r\n  font-size: 24px;\r\n  display: inline-block;\r\n  width: 40px;\r\n  height: 40px;\r\n  background: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const WorkspaceButton = styled.button`\r\n  display: inline-block;\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 10px;\r\n  background: white;\r\n  border: 3px solid #3f0e40;\r\n  margin-bottom: 15px;\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n  color: black;\r\n  cursor: pointer;\r\n`;\r\n","import CreateChannelModal from '@components/CreateChannelModal';\r\nimport DMList from '@components/DMList';\r\nimport ChannelList from '@components/ChannelList';\r\nimport InviteChannelModal from '@components/InviteChannelModal';\r\nimport InviteWorkspaceModal from '@components/InviteWorkspaceModal';\r\nimport Menu from '@components/Menu';\r\nimport Modal from '@components/Modal';\r\nimport useInput from '@hooks/useInput';\r\nimport Channel from '@pages/Channel';\r\nimport DirectMessage from '@pages/DirectMessage';\r\nimport { Button, Input, Label } from '@pages/SignUp/styles';\r\nimport { IChannel, IUser } from '@typings/db';\r\nimport fetcher from '@utils/fetcher';\r\nimport axios from 'axios';\r\nimport gravatar from 'gravatar';\r\nimport React, { useCallback, useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Link, Redirect, Route, Switch } from 'react-router-dom';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport useSWR from 'swr';\r\n\r\nimport {\r\n  AddButton,\r\n  Channels,\r\n  Chats,\r\n  Header,\r\n  LogOutButton,\r\n  MenuScroll,\r\n  ProfileImg,\r\n  ProfileModal,\r\n  RightMenu,\r\n  WorkspaceButton,\r\n  WorkspaceModal,\r\n  WorkspaceName,\r\n  Workspaces,\r\n  WorkspaceWrapper,\r\n} from './styles';\r\nimport useSocket from '@hooks/useSocket';\r\n\r\nconst Workspace = () => {\r\n  const [showCreateWorkspaceModal, setShowCreateWorkspaceModal] = useState(false);\r\n  const [showInviteWorkspaceModal, setShowInviteWorkspaceModal] = useState(false);\r\n  const [showInviteChannelModal, setShowInviteChannelModal] = useState(false);\r\n  const [showCreateChannelModal, setShowCreateChannelModal] = useState(false);\r\n  const [showUserMenu, setShowUserMenu] = useState(false);\r\n  const [showWorkspaceModal, setShowWorkspaceModal] = useState(false);\r\n  const [newWorkspace, onChangeNewWorkspace, setNewWorkspace] = useInput('');\r\n  const [newUrl, onChangeNewUrl, setNewUrl] = useInput('');\r\n\r\n  const params = useParams<{ workspace?: string }>();\r\n  const { workspace } = params;\r\n\r\n  const { data: userData, mutate: revalidateUser } = useSWR<IUser | false>('/api/users', fetcher);\r\n  const { data: channelData } = useSWR<IChannel[]>(userData ? `/api/workspaces/${workspace}/channels` : null, fetcher);\r\n  const { data: memberData, mutate: revalidateMembers } = useSWR<IUser[]>(\r\n    userData ? `/api/workspaces/${workspace}/members` : null,\r\n    fetcher,\r\n  );\r\n  const [socket, disconnect] = useSocket(workspace);\r\n\r\n  useEffect(() => {\r\n    if (channelData && userData && socket) {\r\n      console.log(socket);\r\n      socket.emit('login', { id: userData.id, channels: channelData.map((v) => v.id) });\r\n    }\r\n  }, [socket, channelData, userData]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      disconnect();\r\n    };\r\n  }, [workspace, disconnect]);\r\n\r\n  const onLogOut = useCallback(() => {\r\n    axios\r\n      .post('/api/users/logout')\r\n      .then(() => {\r\n        revalidateUser();\r\n      })\r\n      .catch((error) => {\r\n        console.dir(error);\r\n        toast.error(error.response?.data, { position: 'bottom-center' });\r\n      });\r\n  }, []);\r\n\r\n  const onCreateWorkspace = useCallback(\r\n    (e: any) => {\r\n      e.preventDefault();\r\n      if (!newWorkspace || !newWorkspace.trim()) {\r\n        return;\r\n      }\r\n      if (!newUrl || !newUrl.trim()) {\r\n        return;\r\n      }\r\n      axios\r\n        .post('/api/workspaces', {\r\n          workspace: newWorkspace,\r\n          url: newUrl,\r\n        })\r\n        .then(() => {\r\n          revalidateUser();\r\n          setShowCreateWorkspaceModal(false);\r\n          setNewWorkspace('');\r\n          setNewUrl('');\r\n        })\r\n        .catch((error) => {\r\n          console.dir(error);\r\n          toast.error(error.response?.data, { position: 'bottom-center' });\r\n        });\r\n    },\r\n    [newWorkspace, newUrl],\r\n  );\r\n\r\n  const onClickCreateWorkspace = useCallback(() => {\r\n    setShowCreateWorkspaceModal(true);\r\n  }, []);\r\n\r\n  const onClickAddChannel = useCallback(() => {\r\n    setShowCreateChannelModal(true);\r\n  }, []);\r\n\r\n  const onClickInviteWorkspace = useCallback(() => {\r\n    setShowInviteWorkspaceModal(true);\r\n  }, []);\r\n\r\n  const onCloseModal = useCallback(() => {\r\n    setShowCreateWorkspaceModal(false);\r\n    setShowCreateChannelModal(false);\r\n    setShowInviteWorkspaceModal(false);\r\n    setShowInviteChannelModal(false);\r\n  }, []);\r\n\r\n  const onClickUserProfile = useCallback(() => {\r\n    setShowUserMenu((prev) => !prev);\r\n  }, []);\r\n\r\n  const toggleWorkspaceModal = useCallback(() => {\r\n    setShowWorkspaceModal((prev) => !prev);\r\n  }, []);\r\n\r\n  if (userData === false) {\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header>\r\n        {userData && (\r\n          <RightMenu>\r\n            <span onClick={onClickUserProfile}>\r\n              <ProfileImg src={gravatar.url(userData.email, { s: '28px', d: 'retro' })} alt={userData.nickname} />\r\n            </span>\r\n            {showUserMenu && (\r\n              <Menu style={{ right: 0, top: 38 }} show={showUserMenu} onCloseModal={onClickUserProfile}>\r\n                <ProfileModal>\r\n                  <img src={gravatar.url(userData.email, { s: '36px', d: 'retro' })} alt={userData.nickname} />\r\n                  <div>\r\n                    <span id=\"profile-name\">{userData.nickname}</span>\r\n                    <span id=\"profile-active\">Active</span>\r\n                  </div>\r\n                </ProfileModal>\r\n                <LogOutButton onClick={onLogOut}>로그아웃</LogOutButton>\r\n              </Menu>\r\n            )}\r\n          </RightMenu>\r\n        )}\r\n      </Header>\r\n      <WorkspaceWrapper>\r\n        <Workspaces>\r\n          {userData?.Workspaces?.map((ws) => {\r\n            return (\r\n              <Link key={ws.id} to={`/workspace/${ws.url}/channel/일반`}>\r\n                <WorkspaceButton>{ws.name.slice(0, 1).toUpperCase()}</WorkspaceButton>\r\n              </Link>\r\n            );\r\n          })}\r\n          <AddButton onClick={onClickCreateWorkspace}>+</AddButton>\r\n        </Workspaces>\r\n        <Channels>\r\n          <WorkspaceName onClick={toggleWorkspaceModal}>\r\n            {userData?.Workspaces?.find((v) => v.url === workspace)?.name}\r\n          </WorkspaceName>\r\n          <MenuScroll>\r\n            <Menu show={showWorkspaceModal} onCloseModal={toggleWorkspaceModal} style={{ top: 95, left: 80 }}>\r\n              <WorkspaceModal>\r\n                <h2>{userData?.Workspaces?.find((v) => v.url === workspace)?.name}</h2>\r\n                <button onClick={onClickInviteWorkspace}>워크스페이스에 사용자 초대</button>\r\n                <button onClick={onClickAddChannel}>채널 만들기</button>\r\n                <button onClick={onLogOut}>로그아웃</button>\r\n              </WorkspaceModal>\r\n            </Menu>\r\n            <ChannelList />\r\n            <DMList />\r\n          </MenuScroll>\r\n        </Channels>\r\n        <Chats>\r\n          <Switch>\r\n            <Route path=\"/workspace/:workspace/channel/:channel\" component={Channel} />\r\n            <Route path=\"/workspace/:workspace/dm/:id\" component={DirectMessage} />\r\n          </Switch>\r\n        </Chats>\r\n      </WorkspaceWrapper>\r\n      <Modal show={showCreateWorkspaceModal} onCloseModal={onCloseModal}>\r\n        <form onSubmit={onCreateWorkspace}>\r\n          <Label id=\"workspace-label\">\r\n            <span>워크스페이스 이름</span>\r\n            <Input id=\"workspace\" value={newWorkspace} onChange={onChangeNewWorkspace} />\r\n          </Label>\r\n          <Label id=\"workspace-url-label\">\r\n            <span>워크스페이스 url</span>\r\n            <Input id=\"workspace-url\" value={newUrl} onChange={onChangeNewUrl} />\r\n          </Label>\r\n          <Button type=\"submit\">생성하기</Button>\r\n        </form>\r\n      </Modal>\r\n      <CreateChannelModal\r\n        show={showCreateChannelModal}\r\n        onCloseModal={onCloseModal}\r\n        setShowCreateChannelModal={setShowCreateChannelModal}\r\n      />\r\n      <InviteWorkspaceModal\r\n        show={showInviteWorkspaceModal}\r\n        onCloseModal={onCloseModal}\r\n        setShowInviteWorkspaceModal={setShowInviteWorkspaceModal}\r\n      />\r\n      <InviteChannelModal\r\n        show={showInviteChannelModal}\r\n        onCloseModal={onCloseModal}\r\n        setShowInviteChannelModal={setShowInviteChannelModal}\r\n      />\r\n      <ToastContainer position=\"bottom-center\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Workspace;\r\n"],"names":["CreateModal","CloseModalButton","show","children","onCloseModal","stopPropagation","useCallback","e","onClick","setShowCreateChannelModal","useParams","workspace","channel","useInput","newChannel","onChangeNewChannel","setNewChannel","useSWR","fetcher","userData","data","mutate","revalidateChannel","onCreateChannel","preventDefault","axios","name","withCredentials","then","catch","error","console","dir","toast","response","position","onSubmit","id","value","onChange","type","CollapseButton","collapse","member","isOnline","location","useLocation","dedupingInterval","date","localStorage","getItem","count","useEffect","pathname","key","activeClassName","to","className","undefined","nickname","sockets","log","disconnect","io","transports","info","memberData","socket","useSocket","useState","channelCollapse","setChannelCollapse","onlineList","setOnlineList","toggleChannelCollapse","prev","on","hasListeners","off","map","includes","channelData","setShowInviteChannelModal","newMember","onChangeNewMember","setNewMember","revalidateMembers","onInviteMember","trim","email","setShowInviteWorkspaceModal","revalidateMember","CreateMenu","Menu","closeButton","style","defaultProps","ChatArea","Form","MentionsTextarea","MentionsInput","Toolbox","SendButton","EachMention","focus","onSubmitForm","chat","onChangeChat","placeholder","textareaRef","useRef","current","autosize","onKeydownChat","shiftKey","renderUserSuggestion","search","highlightedDisplay","index","src","gravatar","s","d","alt","onKeyPress","inputRef","allowSuggestionsAboveCursor","appendSpaceOnAdd","trigger","v","display","renderSuggestion","disabled","ChatWrapper","Chat","user","Sender","User","result","useMemo","regexifyString","input","content","pattern","decorator","match","arr","dayjs","createdAt","toString","memo","ChatZone","Section","StickyHeader","scrollbarRef","isReachingEnd","isEmpty","chatSections","setSize","onScroll","values","scrollTop","size","getScrollHeight","scrollHeight","autoHide","ref","onScrollFrame","Object","entries","chats","Container","Header","DragOver","makeSection","chatList","sections","forEach","monthDate","format","Array","isArray","push","channelsData","find","useSWRInfinite","onSuccess","length","setTimeout","scrollToBottom","chatData","mutateChat","channelMembersData","setChat","showInviteChannelModal","dragOver","setDragOver","savedChat","prevChatData","unshift","UserId","Date","ChannelId","Channel","setItem","getTime","getValues","onMessage","startsWith","getClientHeight","getScrollTop","closeOnClick","onClickInviteChannel","onDrop","formData","FormData","dataTransfer","items","i","kind","file","getAsFile","append","files","onDragOver","concat","reverse","flex","justifyContent","alignItems","myData","SenderId","ReceiverId","Receiver","Number","RightMenu","ProfileImg","ProfileModal","LogOutButton","WorkspaceWrapper","Workspaces","Channels","WorkspaceName","MenuScroll","WorkspaceModal","Chats","AddButton","WorkspaceButton","showCreateWorkspaceModal","setShowCreateWorkspaceModal","showInviteWorkspaceModal","showCreateChannelModal","showUserMenu","setShowUserMenu","showWorkspaceModal","setShowWorkspaceModal","newWorkspace","onChangeNewWorkspace","setNewWorkspace","newUrl","onChangeNewUrl","setNewUrl","revalidateUser","emit","channels","onLogOut","onCreateWorkspace","url","onClickCreateWorkspace","onClickAddChannel","onClickInviteWorkspace","onClickUserProfile","toggleWorkspaceModal","right","top","ws","slice","toUpperCase","left","path","component","DirectMessage"],"sourceRoot":""}